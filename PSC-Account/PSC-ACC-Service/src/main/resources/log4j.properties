#encode=utf-8
######################################特定包的输出的级别  ##############################   
#指定特定包的输出特定的级别  
#spring产生的日志较多，设置为error
log4j.logger.org.springframework=error,stdout
#商城的日志输出到控制台和文件，部署生产环境时可把控制台的日志去掉
log4j.logger.cn.wellcare=DEBUG,stdout,logDailyFile
#sql输出
log4j.logger.cn.wellcare.dao=debug
#log4j.logger.java.sql=${pom.log.level},stdout
######################################特定包的输出的级别  ##############################   

#################################日志信息输出###################################   
#配置日志信息输出目的地Appender，其语法为：   
#log4j.appender.appenderName = org.apache.log4j.XXXAppender

#输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
##可以灵活地指定布局模式 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}->[%-5p] %c - %m%n

#每天产生一个日志文件
log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender  
#可以灵活地指定布局模式 
log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout   
log4j.appender.logDailyFile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}-->[%.5p] %c - %m%n
log4j.appender.logDailyFile.Threshold =${pom.log.level}
#表示所有消息都会被立即输出，设为false则不输出，默认值是true。
log4j.appender.logDailyFile.ImmediateFlush =true
#服务器启动日志是否追加，如果是false：服务器启动后会生成日志文件把老的覆盖掉
log4j.appender.logDailyFile.Append =true
log4j.appender.logDailyFile.File =${pom.log.file}
#   '.'yyyy-ww:每周滚动一次文件,即每周产生一个新的文件 , 还可以按用以下参数:  
#   '.'yyyy-MM:每月   
#   '.'yyyy-ww:每周   
#   '.'yyyy-MM-dd:每天   
#   '.'yyyy-MM-dd-a:每天两次   
#   '.'yyyy-MM-dd-HH:每小时   
#   '.'yyyy-MM-dd-HH-mm:每分钟   
log4j.appender.logDailyFile.DatePattern ='.'yyyy-MM-dd-HH'.log'
log4j.appender.logDailyFile.Encoding =utf-8
