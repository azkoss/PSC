2018-12-20 10:01:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:01:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:01:22-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.modules.order.IPayOrderService, method: getPayOrderByOrderIdAndDate, exception: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order    and id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order    and id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:364)
	at com.sun.proxy.$Proxy47.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:119)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52)
	at com.sun.proxy.$Proxy48.getPayOrderByOrderIdAndStatus(Unknown Source)
	at cn.wellcare.model.modules.order.PayOrderModel.getPayOrderByOrderIdAndStatus(PayOrderModel.java:113)
	at cn.wellcare.model.modules.order.PayOrderModel$$FastClassBySpringCGLIB$$57288a6b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.model.modules.order.PayOrderModel$$EnhancerBySpringCGLIB$$79adfb24.getPayOrderByOrderIdAndStatus(<generated>)
	at cn.wellcare.service.modules.order.PayOrderService.getPayOrderByOrderIdAndDate(PayOrderService.java:202)
	at cn.wellcare.service.modules.order.PayOrderService$$FastClassBySpringCGLIB$$f8672703.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.modules.order.PayOrderService$$EnhancerBySpringCGLIB$$d2146b55.getPayOrderByOrderIdAndDate(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper18.invokeMethod(Wrapper18.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2198)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1927)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:562)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:420)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:413)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:62)
	at com.sun.proxy.$Proxy73.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:59)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:73)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:60)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:137)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:120)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:108)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:354)
	... 56 more
2018-12-20 10:04:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:04:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:04:37-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.modules.order.IPayOrderService, method: getPayOrderByOrderIdAndDate, exception: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order    and id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order    and id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:364)
	at com.sun.proxy.$Proxy47.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:119)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52)
	at com.sun.proxy.$Proxy48.getPayOrderByOrderIdAndStatus(Unknown Source)
	at cn.wellcare.model.modules.order.PayOrderModel.getPayOrderByOrderIdAndStatus(PayOrderModel.java:113)
	at cn.wellcare.model.modules.order.PayOrderModel$$FastClassBySpringCGLIB$$57288a6b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.model.modules.order.PayOrderModel$$EnhancerBySpringCGLIB$$79adfb24.getPayOrderByOrderIdAndStatus(<generated>)
	at cn.wellcare.service.modules.order.PayOrderService.getPayOrderByOrderIdAndDate(PayOrderService.java:202)
	at cn.wellcare.service.modules.order.PayOrderService$$FastClassBySpringCGLIB$$f8672703.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.modules.order.PayOrderService$$EnhancerBySpringCGLIB$$d2146b55.getPayOrderByOrderIdAndDate(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper18.invokeMethod(Wrapper18.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.postgresql.util.PSQLException: 错误: 语法错误 在 "and" 或附近的
  位置：348
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2198)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1927)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:562)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:420)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:413)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:62)
	at com.sun.proxy.$Proxy73.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:59)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:73)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:60)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:137)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:120)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:108)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:354)
	... 56 more
2018-12-20 10:10:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:10:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:10:06-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.modules.order.IPayOrderService, method: getPayOrderByOrderIdAndDate, exception: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order    id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order    id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:364)
	at com.sun.proxy.$Proxy47.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:119)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52)
	at com.sun.proxy.$Proxy48.getPayOrderByOrderIdAndStatus(Unknown Source)
	at cn.wellcare.model.modules.order.PayOrderModel.getPayOrderByOrderIdAndStatus(PayOrderModel.java:113)
	at cn.wellcare.model.modules.order.PayOrderModel$$FastClassBySpringCGLIB$$57288a6b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.model.modules.order.PayOrderModel$$EnhancerBySpringCGLIB$$10b3ea8b.getPayOrderByOrderIdAndStatus(<generated>)
	at cn.wellcare.service.modules.order.PayOrderService.getPayOrderByOrderIdAndDate(PayOrderService.java:202)
	at cn.wellcare.service.modules.order.PayOrderService$$FastClassBySpringCGLIB$$f8672703.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.modules.order.PayOrderService$$EnhancerBySpringCGLIB$$6cd42e9d.getPayOrderByOrderIdAndDate(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper18.invokeMethod(Wrapper18.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.postgresql.util.PSQLException: 错误: 语法错误 在 "in" 或附近的
  位置：351
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2198)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1927)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:562)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:420)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:413)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:62)
	at com.sun.proxy.$Proxy73.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:59)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:73)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:60)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:137)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:120)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:108)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:354)
	... 56 more
2018-12-20 10:23:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:23:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:23:13-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.modules.order.IPayOrderService, method: getPayOrderByOrderIdAndDate, exception: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order where 1=1    id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
### The error may exist in URL [jar:file:/C:/maven/apache-maven-3.5.3/repo/cn/wellcare/PSC-Dao/0.0.1-SNAPSHOT/PSC-Dao-0.0.1-SNAPSHOT.jar!/sql_mapper/order/PayOrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select   handle_num,   handle_name,   create_time,   finish_time,   id,   money_order,   money_paid_balance,   money_paid_reality,   order_state,   order_type,   org_id,   outer_order_sn,   payment_code,   payment_name,   payment_status,   pay_sn,   pay_time,   relation_order_sn,   remark,   req_ip,   trade_sn,   update_time   from pay_order where 1=1    id in     (      ?     ,      ?     ,      ?     ,      ?     ,      ?     )             and order_state in     (      ?     )
### Cause: org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
; bad SQL grammar []; nested exception is org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:364)
	at com.sun.proxy.$Proxy47.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:119)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52)
	at com.sun.proxy.$Proxy48.getPayOrderByOrderIdAndStatus(Unknown Source)
	at cn.wellcare.model.modules.order.PayOrderModel.getPayOrderByOrderIdAndStatus(PayOrderModel.java:113)
	at cn.wellcare.model.modules.order.PayOrderModel$$FastClassBySpringCGLIB$$57288a6b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.model.modules.order.PayOrderModel$$EnhancerBySpringCGLIB$$cf3d00c0.getPayOrderByOrderIdAndStatus(<generated>)
	at cn.wellcare.service.modules.order.PayOrderService.getPayOrderByOrderIdAndDate(PayOrderService.java:202)
	at cn.wellcare.service.modules.order.PayOrderService$$FastClassBySpringCGLIB$$f8672703.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.modules.order.PayOrderService$$EnhancerBySpringCGLIB$$5d727b8e.getPayOrderByOrderIdAndDate(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper18.invokeMethod(Wrapper18.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.postgresql.util.PSQLException: 错误: 语法错误 在 "id" 或附近的
  位置：358
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2198)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1927)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:562)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:420)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:413)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:62)
	at com.sun.proxy.$Proxy73.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:59)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:73)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:60)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:137)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:120)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:108)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:354)
	... 56 more
2018-12-20 10:27:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:27:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:27:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 10:27:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 10:27:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 10:27:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 10:27:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:27:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:27:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 10:27:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 10:27:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 10:27:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 10:31:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:31:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:31:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 10:31:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 10:31:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 10:31:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 10:32:23-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:32:23-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:32:23-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 10:32:23-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 10:32:23-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 10:32:23-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 10:33:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:33:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:33:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 10:33:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 10:33:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 10:33:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 10:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 10:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 6(String)
2018-12-20 10:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 10:37:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 10:37:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 10:37:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:06:51-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:06:51-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), null
2018-12-20 11:06:51-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 0
2018-12-20 11:09:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:09:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), null
2018-12-20 11:09:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 0
2018-12-20 11:09:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:09:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:09:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:09:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:09:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:09:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:10:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:10:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), null
2018-12-20 11:10:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 0
2018-12-20 11:14:05-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:05-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:05-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:14:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:14:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:14:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:14:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:14:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:14:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:14:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:14:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:14:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:14:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:18:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:18:03-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:18:03-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:18:03-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:18:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:18:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:18:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:20:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:20:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:20:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:20:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:20:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:20:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:20:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:24:40-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:24:40-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:24:40-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:24:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:24:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:24:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:26:15-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:26:15-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:26:15-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:26:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:26:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:26:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:40:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:40:21-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:40:21-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:40:21-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:40:21-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:40:21-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:40:21-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:40:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:40:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:40:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:40:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:40:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:40:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:40:33-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 11:40:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 11:40:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009430038014011(String)
2018-12-20 11:40:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 11:40:34-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$5fdc7d55.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 11:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 11:41:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:41:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:41:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:41:56-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:41:56-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:41:56-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:42:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 11:42:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 6(String)
2018-12-20 11:42:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 7
2018-12-20 11:42:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 11:42:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 11:42:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 11:42:07-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 11:42:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 11:42:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009430038014011(String)
2018-12-20 11:42:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 11:43:20-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$5fdc7d55.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 13:33:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:35:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:35:20-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:35:20-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:35:20-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 12
2018-12-20 13:35:20-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:35:20-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:35:20-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:36:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:36:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:36:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 12
2018-12-20 13:36:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:36:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:36:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:36:18-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:36:23-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:36:23-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:36:23-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:36:23-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:44:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:44:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:44:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:44:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:44:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:44:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:44:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:44:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:44:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:44:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:44:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:44:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:44:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:44:53-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:44:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:44:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:44:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:44:53-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:45:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:46:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:46:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:46:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:46:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:46:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:46:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:46:08-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:46:08-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 5435435(String)
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918455105065011(String)
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918455105065011(String), 5435435(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:45:51.05(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:45:51.05(Timestamp), 2018-12-19 18:45:51.05(Timestamp), 18121918455105065011(String)
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 13:46:18.774(Timestamp), 383(Integer), 1(Integer), 5435435(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 13:46:18 CST 2018, id=225, orderId=383, orgId=1, outerOrderSn=5435435, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 13:46:18.783(Timestamp), 0(Integer), 383(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220134618748(String), null
2018-12-20 13:46:18-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 13:46:18-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 23423423423(String)
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009261811667011(String)
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122009261811667011(String), 23423423423(String), 002(String), 1(Integer), 2(Integer), 2018-12-20 09:26:18.117(Timestamp), 1(Integer), 1.00(BigDecimal), 0:0:0:0:0:0:0:1(String), accountRecharge(String), 002(String), accountRecharge(String), 2018-12-20 09:26:18.117(Timestamp), 2018-12-20 09:26:18.117(Timestamp), 18122009261811667011(String)
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 13:46:28.891(Timestamp), 384(Integer), 1(Integer), 23423423423(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 13:46:28 CST 2018, id=226, orderId=384, orgId=1, outerOrderSn=23423423423, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 13:46:28.894(Timestamp), 0(Integer), 384(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220134628884(String), null
2018-12-20 13:46:28-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 13:46:28-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 32432432(String)
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918444232161011(String)
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918444232161011(String), 32432432(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:44:42.321(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:44:42.321(Timestamp), 2018-12-19 18:44:42.321(Timestamp), 18121918444232161011(String)
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 13:46:42.779(Timestamp), 382(Integer), 1(Integer), 32432432(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 13:46:42 CST 2018, id=227, orderId=382, orgId=1, outerOrderSn=32432432, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 13:46:42.781(Timestamp), 0(Integer), 382(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220134642772(String), null
2018-12-20 13:46:42-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 13:46:42-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:47:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:47:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:47:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:47:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:47:52-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:47:52-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:47:52-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:47:57-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:48:03-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:48:03-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:48:03-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:50:05-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 13:54:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 13:54:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:54:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:54:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:54:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:54:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:54:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:54:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 13:54:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 13:54:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 13:54:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 13:54:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 13:54:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 13:54:39-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:54:54-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:55:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:55:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:55:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:55:49-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:55:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:55:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:55:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:56:49-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:57:22-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:57:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:57:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:57:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:57:25-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:57:38-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:57:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:57:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:57:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:57:38-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:57:54-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:57:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:57:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:57:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:57:54-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 13:58:01-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 13:58:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 13:58:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 123123(String)
2018-12-20 13:58:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 17
2018-12-20 13:58:01-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:56)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:00:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:00:40-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:00:40-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 14:00:40-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 4
2018-12-20 14:00:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:00:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:00:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:00:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:00:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 14:00:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 4
2018-12-20 14:00:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:00:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:00:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 5435435(String)
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918455105065011(String)
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918455105065011(String), 5435435(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:45:51.05(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:45:51.05(Timestamp), 2018-12-19 18:45:51.05(Timestamp), 18121918455105065011(String)
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:00:55.895(Timestamp), 383(Integer), 1(Integer), 5435435(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:00:55 CST 2018, id=228, orderId=383, orgId=1, outerOrderSn=5435435, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:00:55.897(Timestamp), 0(Integer), 383(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140055886(String), null
2018-12-20 14:00:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:00:55-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 23423423423(String)
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009261811667011(String)
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122009261811667011(String), 23423423423(String), 002(String), 1(Integer), 2(Integer), 2018-12-20 09:26:18.117(Timestamp), 1(Integer), 1.00(BigDecimal), 0:0:0:0:0:0:0:1(String), accountRecharge(String), 002(String), accountRecharge(String), 2018-12-20 09:26:18.117(Timestamp), 2018-12-20 09:26:18.117(Timestamp), 18122009261811667011(String)
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:01:06.072(Timestamp), 384(Integer), 1(Integer), 23423423423(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:01:06 CST 2018, id=229, orderId=384, orgId=1, outerOrderSn=23423423423, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:01:06.074(Timestamp), 0(Integer), 384(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140106066(String), null
2018-12-20 14:01:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:01:06-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 32432432(String)
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918444232161011(String)
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918444232161011(String), 32432432(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:44:42.321(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:44:42.321(Timestamp), 2018-12-19 18:44:42.321(Timestamp), 18121918444232161011(String)
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:01:17.885(Timestamp), 382(Integer), 1(Integer), 32432432(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:01:17 CST 2018, id=230, orderId=382, orgId=1, outerOrderSn=32432432, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:01:17.886(Timestamp), 0(Integer), 382(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140117879(String), null
2018-12-20 14:01:17-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:01:17-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 4
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 5435435(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918455105065011(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918455105065011(String), 5435435(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:45:51.05(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:45:51.05(Timestamp), 2018-12-19 18:45:51.05(Timestamp), 18121918455105065011(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:02:05.235(Timestamp), 383(Integer), 1(Integer), 5435435(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:02:05 CST 2018, id=231, orderId=383, orgId=1, outerOrderSn=5435435, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:02:05.238(Timestamp), 0(Integer), 383(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140205230(String), null
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:02:05-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 23423423423(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009261811667011(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122009261811667011(String), 23423423423(String), 002(String), 1(Integer), 2(Integer), 2018-12-20 09:26:18.117(Timestamp), 1(Integer), 1.00(BigDecimal), 0:0:0:0:0:0:0:1(String), accountRecharge(String), 002(String), accountRecharge(String), 2018-12-20 09:26:18.117(Timestamp), 2018-12-20 09:26:18.117(Timestamp), 18122009261811667011(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:02:05.435(Timestamp), 384(Integer), 1(Integer), 23423423423(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:02:05 CST 2018, id=232, orderId=384, orgId=1, outerOrderSn=23423423423, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:02:05.44(Timestamp), 0(Integer), 384(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140205416(String), null
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:02:05-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 32432432(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918444232161011(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918444232161011(String), 32432432(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:44:42.321(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:44:42.321(Timestamp), 2018-12-19 18:44:42.321(Timestamp), 18121918444232161011(String)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:02:05.602(Timestamp), 382(Integer), 1(Integer), 32432432(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:02:05 CST 2018, id=233, orderId=382, orgId=1, outerOrderSn=32432432, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:02:05.605(Timestamp), 0(Integer), 382(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140205598(String), null
2018-12-20 14:02:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:02:05-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:04:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:04:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:04:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 14:04:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 4
2018-12-20 14:04:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:04:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:04:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 6(String)
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 4
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 5435435(String)
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918455105065011(String)
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918455105065011(String), 5435435(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:45:51.05(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:45:51.05(Timestamp), 2018-12-19 18:45:51.05(Timestamp), 18121918455105065011(String)
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:04:54.898(Timestamp), 383(Integer), 1(Integer), 5435435(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:04:54 CST 2018, id=234, orderId=383, orgId=1, outerOrderSn=5435435, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:04:54.9(Timestamp), 0(Integer), 383(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140454893(String), null
2018-12-20 14:04:54-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:04:54-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 23423423423(String)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009261811667011(String)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122009261811667011(String), 23423423423(String), 002(String), 1(Integer), 2(Integer), 2018-12-20 09:26:18.117(Timestamp), 1(Integer), 1.00(BigDecimal), 0:0:0:0:0:0:0:1(String), accountRecharge(String), 002(String), accountRecharge(String), 2018-12-20 09:26:18.117(Timestamp), 2018-12-20 09:26:18.117(Timestamp), 18122009261811667011(String)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:04:55.074(Timestamp), 384(Integer), 1(Integer), 23423423423(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:04:55 CST 2018, id=235, orderId=384, orgId=1, outerOrderSn=23423423423, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:04:55.076(Timestamp), 0(Integer), 384(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140455069(String), null
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:04:55-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 32432432(String)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918444232161011(String)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=382, createTime=Wed Dec 19 18:44:42 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=32432432, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918444232161011, payTime=Wed Dec 19 18:44:42 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:44:42 CST 2018]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918444232161011(String), 32432432(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:44:42.321(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:44:42.321(Timestamp), 2018-12-19 18:44:42.321(Timestamp), 18121918444232161011(String)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:04:55.238(Timestamp), 382(Integer), 1(Integer), 32432432(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:04:55 CST 2018, id=236, orderId=382, orgId=1, outerOrderSn=32432432, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:04:55.239(Timestamp), 0(Integer), 382(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220140455234(String), null
2018-12-20 14:04:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:04:55-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:14:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:14:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:14:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:14:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:14:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:14:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:14:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:14:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:14:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:14:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:14:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:14:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:14:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:15:00-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:15:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:15:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 5435435(String)
2018-12-20 14:15:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918455105065011(String)
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918455105065011(String), 5435435(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:45:51.05(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:45:51.05(Timestamp), 2018-12-19 18:45:51.05(Timestamp), 18121918455105065011(String)
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:15:28.045(Timestamp), 383(Integer), 1(Integer), 5435435(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:15:28 CST 2018, id=239, orderId=383, orgId=1, outerOrderSn=5435435, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:15:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:15:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:15:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:15:30.31(Timestamp), 0(Integer), 383(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220141522103(String), null
2018-12-20 14:15:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:16:42-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:12-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:18:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:19:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:19:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:19:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:19:01-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:19:01-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:19:01-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:19:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:19:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:19:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:19:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:19:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:19:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:19:31-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 5435435(String)
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18121918455105065011(String)
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=383, createTime=Wed Dec 19 18:45:51 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=5435435, paymentCode=001, paymentName=accountRecharge, paymentStatus=1, paySn=18121918455105065011, payTime=Wed Dec 19 18:45:51 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=127.0.0.1, tradeSn=null, updateTime=Wed Dec 19 18:45:51 CST 2018]
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18121918455105065011(String), 5435435(String), 001(String), 1(Integer), 2(Integer), 2018-12-19 18:45:51.05(Timestamp), 1(Integer), 1.00(BigDecimal), 127.0.0.1(String), accountRecharge(String), 001(String), accountRecharge(String), 2018-12-19 18:45:51.05(Timestamp), 2018-12-19 18:45:51.05(Timestamp), 18121918455105065011(String)
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:19:33.301(Timestamp), 383(Integer), 1(Integer), 5435435(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:19:33 CST 2018, id=240, orderId=383, orgId=1, outerOrderSn=5435435, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:19:33.303(Timestamp), 0(Integer), 383(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220141933294(String), null
2018-12-20 14:19:33-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:20:04-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:20:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:20:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 23423423423(String)
2018-12-20 14:20:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:20:09-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122009261811667011(String)
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=384, createTime=Thu Dec 20 09:26:18 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=1.00, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=002, orgId=1, outerOrderSn=23423423423, paymentCode=002, paymentName=accountRecharge, paymentStatus=1, paySn=18122009261811667011, payTime=Thu Dec 20 09:26:18 CST 2018, relationOrderSn=null, remark=accountRecharge, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 09:26:18 CST 2018]
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122009261811667011(String), 23423423423(String), 002(String), 1(Integer), 2(Integer), 2018-12-20 09:26:18.117(Timestamp), 1(Integer), 1.00(BigDecimal), 0:0:0:0:0:0:0:1(String), accountRecharge(String), 002(String), accountRecharge(String), 2018-12-20 09:26:18.117(Timestamp), 2018-12-20 09:26:18.117(Timestamp), 18122009261811667011(String)
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:20:10-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 1.00(BigDecimal), 1.00(BigDecimal), 更新订单(String), 2018-12-20 14:20:10.73(Timestamp), 384(Integer), 1(Integer), 23423423423(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:20:24-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:20:24-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=1.00, amountPrev=1.00, content=更新订单, createTime=Thu Dec 20 14:20:10 CST 2018, id=241, orderId=384, orgId=1, outerOrderSn=23423423423, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:20:24-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:20:24-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:20:24-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:20:24.47(Timestamp), 0(Integer), 384(Integer), 1.0(BigDecimal), 1(Integer), null, 20181220142009323(String), null
2018-12-20 14:20:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:20:32-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:20:32-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@354135ef[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{clientIp=0:0:0:0:0:0:0:1, encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=45648978979878977, orgId=1, payAmount=0.01, payType=001, tradeTime=1545286905250, userId=1}
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：45648978979878977
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-20 14:21:57.8(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 45648978979878977(String), 001(String), wechatNative(String), 0(Integer), 18122014215779906(String), 2018-12-20 14:21:57.8(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-20 14:21:57.8(Timestamp)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-20 14:21:57.805(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Thu Dec 20 14:21:57 CST 2018, id=242, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-20 14:21:57.81(Timestamp), null, null, 395(Integer), 18122014215779906(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 14:21:57-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 14:21:57-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=uh4kps9q9boi7f1a8uvjcqq4wpwxa34q&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122014215779906&product_id=18122014215779906&spbill_create_ip=192.168.2.121&time_expire=20181220142657&time_start=20181220142157&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-20 14:21:57-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:E1338592F23F8AFC1D9B014035C2C031
2018-12-20 14:21:57-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122014215779906</product_id><nonce_str>uh4kps9q9boi7f1a8uvjcqq4wpwxa34q</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122014215779906</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181220142157</time_start><time_expire>20181220142657</time_expire><sign>E1338592F23F8AFC1D9B014035C2C031</sign></xml>
2018-12-20 14:21:58-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[Rz9ZSai2HhWpM7HM]]></nonce_str>
<sign><![CDATA[089EEFA2D4794399793F27983A6FE16D]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx201421587875021f67a220929306705400]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=W615xAL&groupid=00]]></code_url>
</xml>
2018-12-20 14:21:59-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-20 14:21:59-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:21:59-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-20 14:21:59.048(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122014215779906(String), null, 2018-12-20 14:21:59.048(Timestamp), 1(Integer), 2018-12-20 14:21:45.25(Timestamp)
2018-12-20 14:21:59-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-20 14:21:59-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-20 14:21:59-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@610ac7f0，签名：371b4bb5f4b35d932e9a26400ac64e48
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:26:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:26:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:26:18-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:26:18-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:26:18-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:26:18-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:26:28-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:26:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:26:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:26:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:26:38.857(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:26:38 CST 2018, id=243, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:26:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:26:42-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:26:42-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:26:42.527(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220142632493(String), null
2018-12-20 14:26:42-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:27:23-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:27:35-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:27:55-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:31-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:30:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:30:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:30:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:30:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:30:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:30:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:30:47-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:31:01-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:31:06.554(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:31:06 CST 2018, id=244, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:31:06.556(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143106549(String), null
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:31:06-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:31:06.61(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:31:06 CST 2018, id=245, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:31:06.611(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143106606(String), null
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:31:06-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:31:06.781(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:31:06 CST 2018, id=246, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:31:06.782(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143106776(String), null
2018-12-20 14:31:06-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:31:06-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:34:44-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:35:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:35:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:35:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:35:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:35:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:35:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:35:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:35:25.833(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:35:25 CST 2018, id=247, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:35:25.835(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143525829(String), null
2018-12-20 14:35:25-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:35:25-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:35:26.02(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:35:26 CST 2018, id=248, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:35:26.02(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143526016(String), null
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:35:26-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:35:26.186(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:35:26 CST 2018, id=249, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:35:26.189(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143526183(String), null
2018-12-20 14:35:26-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:35:26-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$39864c8a.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:38:11-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:38:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:38:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:38:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:38:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:38:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:38:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:38:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:38:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:38:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:38:27-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:38:27-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:38:27-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:38:28-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:38:31.881(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:38:31 CST 2018, id=250, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:38:31.887(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143831829(String), null
2018-12-20 14:38:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:38:43-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:38:52-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:38:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:38:53-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:38:53-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:38:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:38:54-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:38:58-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 14:39:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 14:39:04-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$95603c3c.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:39:04.478(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:39:04 CST 2018, id=251, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:39:04.481(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143852070(String), null
2018-12-20 14:39:04-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:39:05-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$95603c3c.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 14:39:05.083(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 14:39:05 CST 2018, id=252, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 14:39:05.087(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220143902640(String), null
2018-12-20 14:39:05-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 14:39:07-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.pojo.wechat.WXPayUtil.generateSignature(WXPayUtil.java:140)
	at cn.wellcare.pojo.wechat.WXPay.fillRequestData(WXPay.java:46)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:305)
	at cn.wellcare.pojo.wechat.WXPay.refund(WXPay.java:294)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:89)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$95603c3c.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:41:08-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:41:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:41:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:41:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:41:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:41:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:41:19-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 6(String)
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 14:41:33-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:57:00-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 14:57:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:05:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:02-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:03-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:04-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:06:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:06:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:06:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:06:33-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:06:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:06:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:06:33-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:06:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:06:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:06:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:06:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:06:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:06:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:06:44-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy8
2018-12-20 15:06:44-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$163a6ffc.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:06:44-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy8
2018-12-20 15:06:44-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$163a6ffc.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:06:44-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy8
2018-12-20 15:06:44-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$163a6ffc.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:11:13-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy8
2018-12-20 15:11:13-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$163a6ffc.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:11:41-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy8
2018-12-20 15:11:41-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$163a6ffc.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:13:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:13:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:13:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:13:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:13:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:13:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:13:46-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:13:46-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$383ace5f.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:20:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:22:13-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:22:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:22:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:23:32-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:23:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:23:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:23:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:23:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:23:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:23:36-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:23:45-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:23:45-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$383ace5f.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:23:59-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:23:59-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$383ace5f.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:24:15-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:24:43-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$383ace5f.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:25:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:25:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:25:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:25:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:25:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:25:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:26:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:26:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:26:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:26:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:26:09-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:26:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:26:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:26:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:26:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:26:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:26:22-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:26:31-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:26:46-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$383ace5f.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:27:26-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:28:15-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$383ace5f.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:31:26-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:31:49-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NumberFormatException: For input string: "null"
java.lang.NumberFormatException: For input string: "null"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:46)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$4230d577.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 15:32:40-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 15:32:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:32:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:32:42-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:32:42-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:32:42-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:32:42-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:32:57-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:33:03-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:33:05-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:33:05-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:33:05-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:33:19.34(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:33:19 CST 2018, id=273, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:33:19.345(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220153319282(String), null
2018-12-20 15:33:19-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:34:59-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:35:05-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:35:07-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:35:07-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:35:07-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:35:29-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:35:29-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:35:29-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:35:32.326(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:35:32 CST 2018, id=274, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:35:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:35:33-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:35:33-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:35:33.756(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220153525515(String), null
2018-12-20 15:35:33-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:41:49-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:41:49-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:41:49-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:41:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:41:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:41:49-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:41:50.429(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:41:50 CST 2018, id=276, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:41:50.434(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220154150378(String), null
2018-12-20 15:41:50-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:41:55.293(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:41:55 CST 2018, id=277, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:41:55.294(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220154155281(String), null
2018-12-20 15:41:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:42:30.997(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:42:30 CST 2018, id=278, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:42:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:42:30.999(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220154230988(String), null
2018-12-20 15:42:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 6
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:42:37.606(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:42:37 CST 2018, id=279, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:42:37.607(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220154237598(String), null
2018-12-20 15:42:37-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:45:24-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:45:24-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:45:24-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 15:45:24-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:45:24-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:45:24-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:45:25.915(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:45:25 CST 2018, id=280, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:45:25.928(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220154525868(String), null
2018-12-20 15:45:25-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 15:47:55-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 15:48:00-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 15:48:01-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 15:48:01-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 15:48:01-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 15:48:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 15:48:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 15:48:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 15:48:32.925(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 15:48:32 CST 2018, id=282, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 15:48:32-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 15:48:35-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 15:48:35-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 15:48:35.425(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220154826350(String), null
2018-12-20 15:48:35-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 16:34:51-->[DEBUG] cn.wellcare.portal.controller.demo.DemoRefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy7
2018-12-20 16:34:56-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 16:34:56-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:34:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:34:58.01(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:34:58 CST 2018, id=288, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 16:34:58.028(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220163457727(String), null
2018-12-20 16:34:58-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 16:41:25-->[DEBUG] cn.wellcare.portal.controller.demo.DemoRefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:41:30.213(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 2(Integer)
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:41:30 CST 2018, id=289, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=2]
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 16:41:30.219(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220164130122(String), null
2018-12-20 16:41:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 16:41:31-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: cn.wellcare.core.exception.BusinessException: 交易失败码：NOTENOUGH, 返回信息：交易未结算资金不足，请使用可用余额退款;
cn.wellcare.core.exception.BusinessException: 交易失败码：NOTENOUGH, 返回信息：交易未结算资金不足，请使用可用余额退款;
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:100)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$cdeea491.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 16:41:31-->[DEBUG] cn.wellcare.rpc.filter.PscDubboExceptionFilter - RPC业务异常：cn.wellcare.core.exception.BusinessException
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.portal.controller.demo.DemoRefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: (String)
2018-12-20 16:43:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 16:43:43-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:57)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$cdeea491.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.portal.controller.demo.DemoRefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648978979878977(String)
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122014215779906(String)
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=395, createTime=Thu Dec 20 14:21:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648978979878977, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122014215779906, payTime=Thu Dec 20 14:21:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 14:21:57 CST 2018]
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122014215779906(String), 45648978979878977(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 14:21:57.8(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 14:21:57.8(Timestamp), 2018-12-20 14:21:57.8(Timestamp), 18122014215779906(String)
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:44:41.712(Timestamp), 395(Integer), 1(Integer), 45648978979878977(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:44:41 CST 2018, id=290, orderId=395, orgId=1, outerOrderSn=45648978979878977, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 16:44:41.716(Timestamp), 0(Integer), 395(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220164441703(String), null
2018-12-20 16:44:41-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 16:44:42-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.RefundPayApi, method: refundPay, exception: cn.wellcare.core.exception.BusinessException: 交易失败码：NOTENOUGH, 返回信息：交易未结算资金不足，请使用可用余额退款;
cn.wellcare.core.exception.BusinessException: 交易失败码：NOTENOUGH, 返回信息：交易未结算资金不足，请使用可用余额退款;
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService.refundPay(WxNativeRefundPayService.java:100)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$FastClassBySpringCGLIB$$5f00fbc4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService$$EnhancerBySpringCGLIB$$cdeea491.refundPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 16:44:42-->[DEBUG] cn.wellcare.rpc.filter.PscDubboExceptionFilter - RPC业务异常：cn.wellcare.core.exception.BusinessException
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@453c6dcb[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{clientIp=0:0:0:0:0:0:0:1, encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=897887889787878787789, orgId=1, payAmount=0.01, payType=001, tradeTime=1545295524726, userId=1}
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：897887889787878787789
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 897887889787878787789(String)
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:45:34 CST 2018]
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-20 16:45:34.993(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 897887889787878787789(String), 001(String), wechatNative(String), 0(Integer), 18122016453499226(String), 2018-12-20 16:45:34.993(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-20 16:45:34.993(Timestamp)
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-20 16:45:34.996(Timestamp), 418(Integer), 1(Integer), 897887889787878787789(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Thu Dec 20 16:45:34 CST 2018, id=291, orderId=418, orgId=1, outerOrderSn=897887889787878787789, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-20 16:45:34-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-20 16:45:34.999(Timestamp), null, null, 418(Integer), 18122016453499226(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:45:35-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=lgxno89xrmg8dkerj0tcpy9qm3kr1swf&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122016453499226&product_id=18122016453499226&spbill_create_ip=192.168.2.121&time_expire=20181220165035&time_start=20181220164535&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-20 16:45:35-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:ECBB2C68DF7431A9E32403296AF083C0
2018-12-20 16:45:35-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122016453499226</product_id><nonce_str>lgxno89xrmg8dkerj0tcpy9qm3kr1swf</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122016453499226</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181220164535</time_start><time_expire>20181220165035</time_expire><sign>ECBB2C68DF7431A9E32403296AF083C0</sign></xml>
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@89bbf72[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{clientIp=0:0:0:0:0:0:0:1, encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=897887889787878787789, orgId=1, payAmount=0.01, payType=001, tradeTime=1545295524726, userId=1}
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：897887889787878787789
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 897887889787878787789(String)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Thu Dec 20 16:45:35 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122016453538235, payTime=Thu Dec 20 16:45:35 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:45:35 CST 2018]
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-20 16:45:35.382(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 897887889787878787789(String), 001(String), wechatNative(String), 0(Integer), 18122016453538235(String), 2018-12-20 16:45:35.382(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-20 16:45:35.382(Timestamp)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-20 16:45:35.386(Timestamp), 419(Integer), 1(Integer), 897887889787878787789(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Thu Dec 20 16:45:35 CST 2018, id=292, orderId=419, orgId=1, outerOrderSn=897887889787878787789, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-20 16:45:35.389(Timestamp), null, null, 419(Integer), 18122016453538235(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:45:35-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=n7rrjiktssu1yafdcjbobwewyfdqtvj7&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122016453538235&product_id=18122016453538235&spbill_create_ip=192.168.2.121&time_expire=20181220165035&time_start=20181220164535&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-20 16:45:35-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:0F8CAA2A858ADC1764C09EE1C57CA7B3
2018-12-20 16:45:35-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122016453538235</product_id><nonce_str>n7rrjiktssu1yafdcjbobwewyfdqtvj7</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122016453538235</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181220164535</time_start><time_expire>20181220165035</time_expire><sign>0F8CAA2A858ADC1764C09EE1C57CA7B3</sign></xml>
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付服务调用异常，异常信息：支付接口异常，请稍后重试
2018-12-20 16:45:35-->[ERROR] cn.wellcare.rpc.filter.PscDubboExceptionFilter - Got unchecked and undeclared exception which called by 192.168.2.121. service: cn.wellcare.payment.api.PaymentApi, method: doPay, exception: cn.wellcare.core.exception.BusinessException: 支付接口异常，请稍后重试
cn.wellcare.core.exception.BusinessException: 支付接口异常，请稍后重试
	at cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler.doPay(WechatNativeBasePayHandler.java:96)
	at cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler$$FastClassBySpringCGLIB$$29f004d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler$$EnhancerBySpringCGLIB$$5f33c735.doPay(<generated>)
	at cn.wellcare.service.transaction.payment.wechat.WechatNativeService.doPay(WechatNativeService.java:58)
	at cn.wellcare.service.transaction.payment.wechat.WechatNativeService$$FastClassBySpringCGLIB$$148d04ed.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at cn.wellcare.service.transaction.payment.wechat.WechatNativeService$$EnhancerBySpringCGLIB$$8a1c706d.doPay(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper0.invokeMethod(Wrapper0.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at cn.wellcare.rpc.filter.PscDubboExceptionFilter.invoke(PscDubboExceptionFilter.java:27)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:69)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:100)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:81)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.rpc.filter.PscDubboExceptionFilter - RPC业务异常：cn.wellcare.core.exception.BusinessException
2018-12-20 16:45:35-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[J9bIePj7rSzGXSsh]]></nonce_str>
<sign><![CDATA[A5A71AADD89F11C996D04118CB6A6AB5]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx20164535510249ac8d18e3362022976920]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=N2tDDm7]]></code_url>
</xml>
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-20 16:45:35.675(Timestamp), 418(Integer), 1(Integer), 897887889787878787789(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122016453499226(String), null, 2018-12-20 16:45:35.675(Timestamp), 1(Integer), 2018-12-20 16:45:24.726(Timestamp)
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-20 16:45:35-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@4a002a56，签名：036124e56d5f1dbdbd267d2c4643e911
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.portal.controller.demo.DemoRefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 897887889787878787789(String)
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=418, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:45:34 CST 2018]
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122016453499226(String)
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=418, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:45:34 CST 2018]
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=418, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:45:34 CST 2018]
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122016453499226(String), 897887889787878787789(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 16:45:34.993(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 16:45:34.993(Timestamp), 2018-12-20 16:45:34.993(Timestamp), 18122016453499226(String)
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:47:13.412(Timestamp), 418(Integer), 1(Integer), 897887889787878787789(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:47:13 CST 2018, id=294, orderId=418, orgId=1, outerOrderSn=897887889787878787789, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 16:47:13.413(Timestamp), 0(Integer), 418(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220164713404(String), null
2018-12-20 16:47:13-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 16:47:14-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：897887889787878787789, 退款id: 50000309142018122007627626846
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-20 16:47:13.413(Timestamp), 70(Integer), 0(Integer), 418(Integer), 0.01(BigDecimal), 3(Integer), 50000309142018122007627626846(String), 20181220164713404(String), 2018-12-20 16:47:14.704(Timestamp), 70(Integer)
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=418, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:14 CST 2018]
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122016453499226(String)
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=418, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:45:34 CST 2018]
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=418, createTime=Thu Dec 20 16:45:34 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=897887889787878787789, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016453499226, payTime=Thu Dec 20 16:45:34 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:14 CST 2018]
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122016453499226(String), 897887889787878787789(String), 001(String), 1(Integer), 3(Integer), 2018-12-20 16:45:34.993(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 16:45:34.993(Timestamp), 2018-12-20 16:47:14.711(Timestamp), 18122016453499226(String)
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:47:14.715(Timestamp), 418(Integer), 1(Integer), 897887889787878787789(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:47:14 CST 2018, id=295, orderId=418, orgId=1, outerOrderSn=897887889787878787789, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-20 16:47:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@50b67504[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{clientIp=0:0:0:0:0:0:0:1, encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=87978978978978978978978879754, orgId=1, payAmount=0.01, payType=001, tradeTime=1545295655301, userId=1}
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：87978978978978978978978879754
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 87978978978978978978978879754(String)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:47 CST 2018]
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-20 16:47:47.69(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 87978978978978978978978879754(String), 001(String), wechatNative(String), 0(Integer), 18122016474769042(String), 2018-12-20 16:47:47.69(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-20 16:47:47.69(Timestamp)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-20 16:47:47.693(Timestamp), 421(Integer), 1(Integer), 87978978978978978978978879754(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Thu Dec 20 16:47:47 CST 2018, id=296, orderId=421, orgId=1, outerOrderSn=87978978978978978978978879754, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-20 16:47:47.695(Timestamp), null, null, 421(Integer), 18122016474769042(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:47:47-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:47:47-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=p5jpd6n8ge3xw7ufynkr7yhvmsbwii8e&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122016474769042&product_id=18122016474769042&spbill_create_ip=192.168.2.121&time_expire=20181220165247&time_start=20181220164747&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-20 16:47:47-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:261C132D85894DCF36B33D5816DEFD0B
2018-12-20 16:47:47-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122016474769042</product_id><nonce_str>p5jpd6n8ge3xw7ufynkr7yhvmsbwii8e</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122016474769042</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181220164747</time_start><time_expire>20181220165247</time_expire><sign>261C132D85894DCF36B33D5816DEFD0B</sign></xml>
2018-12-20 16:47:48-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[5UbXoFXoaS7yeCIX]]></nonce_str>
<sign><![CDATA[A62340FD99F0AE0BF37B0E84D8227D8B]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx20164748092668120d20b6dc3655777999]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=wEcJUBu]]></code_url>
</xml>
2018-12-20 16:47:48-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-20 16:47:48-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:47:48-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-20 16:47:48.193(Timestamp), 421(Integer), 1(Integer), 87978978978978978978978879754(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122016474769042(String), null, 2018-12-20 16:47:48.193(Timestamp), 1(Integer), 2018-12-20 16:47:35.301(Timestamp)
2018-12-20 16:47:48-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-20 16:47:48-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-20 16:47:48-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@4a002a56，签名：346b7035b7c8a53fb576dd301985c827
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 16:52:38-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 16:52:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 16:52:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 16:52:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 16:52:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 16:52:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 16:52:43-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 87978978978978978978978879754(String)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=421, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:47 CST 2018]
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122016474769042(String)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=421, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:47 CST 2018]
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=421, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:47 CST 2018]
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122016474769042(String), 87978978978978978978978879754(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 16:47:47.69(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 16:47:47.69(Timestamp), 2018-12-20 16:47:47.69(Timestamp), 18122016474769042(String)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:52:58.339(Timestamp), 421(Integer), 1(Integer), 87978978978978978978978879754(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:52:58 CST 2018, id=297, orderId=421, orgId=1, outerOrderSn=87978978978978978978978879754, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 16:52:58.341(Timestamp), 0(Integer), 421(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220165258327(String), null
2018-12-20 16:52:58-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 16:52:59-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：87978978978978978978978879754, 退款id: 50000209132018122007578362927
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-20 16:52:58.341(Timestamp), 71(Integer), 0(Integer), 421(Integer), 0.01(BigDecimal), 3(Integer), 50000209132018122007578362927(String), 20181220165258327(String), 2018-12-20 16:52:59.748(Timestamp), 71(Integer)
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=421, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:52:59 CST 2018]
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122016474769042(String)
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=421, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:47:47 CST 2018]
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=421, createTime=Thu Dec 20 16:47:47 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=87978978978978978978978879754, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016474769042, payTime=Thu Dec 20 16:47:47 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:52:59 CST 2018]
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122016474769042(String), 87978978978978978978978879754(String), 001(String), 1(Integer), 3(Integer), 2018-12-20 16:47:47.69(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 16:47:47.69(Timestamp), 2018-12-20 16:52:59.755(Timestamp), 18122016474769042(String)
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 16:52:59.767(Timestamp), 421(Integer), 1(Integer), 87978978978978978978978879754(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 16:52:59 CST 2018, id=298, orderId=421, orgId=1, outerOrderSn=87978978978978978978978879754, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-20 16:52:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@3ca98d66[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{clientIp=0:0:0:0:0:0:0:1, encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=456456456789123216786, orgId=1, payAmount=0.01, payType=001, tradeTime=1545296102804, userId=1}
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：456456456789123216786
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 456456456789123216786(String)
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:55:12 CST 2018]
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-20 16:55:12.945(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 456456456789123216786(String), 001(String), wechatNative(String), 0(Integer), 18122016551294512(String), 2018-12-20 16:55:12.945(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-20 16:55:12.945(Timestamp)
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-20 16:55:12.95(Timestamp), 422(Integer), 1(Integer), 456456456789123216786(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Thu Dec 20 16:55:12 CST 2018, id=299, orderId=422, orgId=1, outerOrderSn=456456456789123216786, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-20 16:55:12.952(Timestamp), null, null, 422(Integer), 18122016551294512(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-20 16:55:12-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 16:55:13-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=41qg47jee8pyly0n6xllcqborn7cd1hu&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122016551294512&product_id=18122016551294512&spbill_create_ip=192.168.2.121&time_expire=20181220170013&time_start=20181220165513&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-20 16:55:13-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:167A5693688269E39930294F2B0A1A2B
2018-12-20 16:55:13-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122016551294512</product_id><nonce_str>41qg47jee8pyly0n6xllcqborn7cd1hu</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122016551294512</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181220165513</time_start><time_expire>20181220170013</time_expire><sign>167A5693688269E39930294F2B0A1A2B</sign></xml>
2018-12-20 16:55:13-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[6pANwrzt7Q7JR8dW]]></nonce_str>
<sign><![CDATA[07EB6AAE1DBD69D1EE88F47B7F6083E1]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx20165513450772654a8025793070595004]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=4r6lH3c]]></code_url>
</xml>
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-20 16:55:13.562(Timestamp), 422(Integer), 1(Integer), 456456456789123216786(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122016551294512(String), null, 2018-12-20 16:55:13.562(Timestamp), 1(Integer), 2018-12-20 16:55:02.804(Timestamp)
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-20 16:55:13-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@4a002a56，签名：35986d0bae06f0610f519465cf69f4b8
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 17:02:30-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 17:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 17:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 17:02:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 17:02:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 17:02:37-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 17:03:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 17:03:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 17:03:25-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 17:03:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 17:03:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 17:03:25-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 456456456789123216786(String)
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=422, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:55:12 CST 2018]
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122016551294512(String)
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=422, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:55:12 CST 2018]
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=422, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:55:12 CST 2018]
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122016551294512(String), 456456456789123216786(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 16:55:12.945(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 16:55:12.945(Timestamp), 2018-12-20 16:55:12.945(Timestamp), 18122016551294512(String)
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 17:03:43.3(Timestamp), 422(Integer), 1(Integer), 456456456789123216786(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 17:03:43 CST 2018, id=300, orderId=422, orgId=1, outerOrderSn=456456456789123216786, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 17:03:43.301(Timestamp), 0(Integer), 422(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220170343294(String), null
2018-12-20 17:03:43-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 17:03:44-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：456456456789123216786, 退款id: 50000109242018122007627691630
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-20 17:03:43.301(Timestamp), 72(Integer), 0(Integer), 422(Integer), 0.01(BigDecimal), 3(Integer), 50000109242018122007627691630(String), 20181220170343294(String), 2018-12-20 17:03:44.566(Timestamp), 72(Integer)
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=422, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:03:44 CST 2018]
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122016551294512(String)
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=422, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 16:55:12 CST 2018]
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=422, createTime=Thu Dec 20 16:55:12 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=456456456789123216786, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122016551294512, payTime=Thu Dec 20 16:55:12 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:03:44 CST 2018]
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122016551294512(String), 456456456789123216786(String), 001(String), 1(Integer), 3(Integer), 2018-12-20 16:55:12.945(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 16:55:12.945(Timestamp), 2018-12-20 17:03:44.568(Timestamp), 18122016551294512(String)
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 17:03:44.572(Timestamp), 422(Integer), 1(Integer), 456456456789123216786(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 17:03:44 CST 2018, id=301, orderId=422, orgId=1, outerOrderSn=456456456789123216786, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-20 17:03:44-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@1153e8fa[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{clientIp=0:0:0:0:0:0:0:1, encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=78745241231016549851561, orgId=1, payAmount=0.01, payType=001, tradeTime=1545296730427, userId=1}
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：78745241231016549851561
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 78745241231016549851561(String)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:05:38 CST 2018]
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-20 17:05:38.856(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 78745241231016549851561(String), 001(String), wechatNative(String), 0(Integer), 18122017053885614(String), 2018-12-20 17:05:38.856(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-20 17:05:38.856(Timestamp)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-20 17:05:38.859(Timestamp), 423(Integer), 1(Integer), 78745241231016549851561(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Thu Dec 20 17:05:38 CST 2018, id=302, orderId=423, orgId=1, outerOrderSn=78745241231016549851561, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-20 17:05:38.86(Timestamp), null, null, 423(Integer), 18122017053885614(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 17:05:38-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 17:05:38-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=mtlq28wewb4pukpistotrbbegj0qnx5f&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122017053885614&product_id=18122017053885614&spbill_create_ip=192.168.2.121&time_expire=20181220171038&time_start=20181220170538&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-20 17:05:38-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:9E49FAF30CAF4897D4417ACD97442957
2018-12-20 17:05:38-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122017053885614</product_id><nonce_str>mtlq28wewb4pukpistotrbbegj0qnx5f</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122017053885614</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181220170538</time_start><time_expire>20181220171038</time_expire><sign>9E49FAF30CAF4897D4417ACD97442957</sign></xml>
2018-12-20 17:05:39-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[bEVPI7kebU8k5nJN]]></nonce_str>
<sign><![CDATA[DC1B1DFDD9132253019763FD51C058A6]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx201705392233322e4d3a6fbb3143121703]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=LwlVvKl]]></code_url>
</xml>
2018-12-20 17:05:39-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-20 17:05:39-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:05:39-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-20 17:05:39.345(Timestamp), 423(Integer), 1(Integer), 78745241231016549851561(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122017053885614(String), null, 2018-12-20 17:05:39.345(Timestamp), 1(Integer), 2018-12-20 17:05:30.427(Timestamp)
2018-12-20 17:05:39-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-20 17:05:39-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-20 17:05:39-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@4a002a56，签名：267d7df62ee573a322714c3a7d72e1a3
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-20 17:08:34-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-20 17:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 17:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 17:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 17:08:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 17:08:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 17:08:39-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 17:09:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 17:09:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 17:09:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 17:09:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 17:09:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 17:09:14-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 17:09:29-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==>  Preparing: select handle_num, handle_name, create_time, finish_time, id, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time from pay_order where 1=1 and id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and order_state in ( ? ) 
2018-12-20 17:09:29-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - ==> Parameters: 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), 390(String), 391(String), 392(String), 393(String), 394(String), 399(String), 6(String)
2018-12-20 17:09:29-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.getPayOrderByOrderIdAndStatus - <==      Total: 5
2018-12-20 17:09:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where 1=1 and use_yn= ? and code_div like CONCAT('%',?,'%') 
2018-12-20 17:09:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - ==> Parameters: 1(Integer), ORDER_TIMEOUT(String)
2018-12-20 17:09:29-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.getList - <==      Total: 3
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.portal.controller.refundpay.RefundPayController - 确定使用实例：com.alibaba.dubbo.common.bytecode.proxy6
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 78745241231016549851561(String)
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=423, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:05:38 CST 2018]
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122017053885614(String)
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=423, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:05:38 CST 2018]
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=423, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:05:38 CST 2018]
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122017053885614(String), 78745241231016549851561(String), 001(String), 1(Integer), 2(Integer), 2018-12-20 17:05:38.856(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 17:05:38.856(Timestamp), 2018-12-20 17:05:38.856(Timestamp), 18122017053885614(String)
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 17:09:41.831(Timestamp), 423(Integer), 1(Integer), 78745241231016549851561(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 17:09:41 CST 2018, id=303, orderId=423, orgId=1, outerOrderSn=78745241231016549851561, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-20 17:09:41.836(Timestamp), 0(Integer), 423(Integer), 0.01(BigDecimal), 1(Integer), null, 20181220170941820(String), null
2018-12-20 17:09:41-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-20 17:09:43-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：78745241231016549851561, 退款id: 50000308982018122007604039370
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-20 17:09:41.836(Timestamp), 73(Integer), 0(Integer), 423(Integer), 0.01(BigDecimal), 3(Integer), 50000308982018122007604039370(String), 20181220170941820(String), 2018-12-20 17:09:43.169(Timestamp), 73(Integer)
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=423, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:09:43 CST 2018]
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122017053885614(String)
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=423, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:05:38 CST 2018]
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=423, createTime=Thu Dec 20 17:05:38 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=78745241231016549851561, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122017053885614, payTime=Thu Dec 20 17:05:38 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Thu Dec 20 17:09:43 CST 2018]
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122017053885614(String), 78745241231016549851561(String), 001(String), 1(Integer), 3(Integer), 2018-12-20 17:05:38.856(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-20 17:05:38.856(Timestamp), 2018-12-20 17:09:43.171(Timestamp), 18122017053885614(String)
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-20 17:09:43.174(Timestamp), 423(Integer), 1(Integer), 78745241231016549851561(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Thu Dec 20 17:09:43 CST 2018, id=304, orderId=423, orgId=1, outerOrderSn=78745241231016549851561, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-20 17:09:43-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@21dc0e81[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=798789789745451231&orgId=1&payAmount=0.01&payType=001&tradeTime=1545375071940&userId=1
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=798789789745451231&orgId=1&payAmount=0.01&payType=001&tradeTime=1545375071940&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=798789789745451231, orgId=1, payAmount=0.01, payType=001, tradeTime=1545375071940, userId=1}
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=798789789745451231&orgId=1&payAmount=0.01&payType=001&tradeTime=1545375071940&userId=1
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=798789789745451231&orgId=1&payAmount=0.01&payType=001&tradeTime=1545375071940&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[d0fc2d722a65bc90291cac19fdef7528]，客户端签名：[0f2e7323e643bd115f5c5c2678e7dbad]
2018-12-21 14:51:21-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 14:51:21-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：798789789745451231
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 798789789745451231(String)
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 14:51:22 CST 2018]
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 14:51:22.069(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 798789789745451231(String), 001(String), wechatNative(String), 0(Integer), 18122114512206845(String), 2018-12-21 14:51:22.069(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 14:51:22.069(Timestamp)
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 14:51:22.076(Timestamp), 440(Integer), 1(Integer), 798789789745451231(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 14:51:22 CST 2018, id=327, orderId=440, orgId=1, outerOrderSn=798789789745451231, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 14:51:22.081(Timestamp), null, null, 440(Integer), 18122114512206845(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 14:51:22-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 14:51:22-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=nro853os1rdcru2h5acb1br7a4fkvcw8&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122114512206845&product_id=18122114512206845&spbill_create_ip=192.168.2.121&time_expire=20181221145622&time_start=20181221145122&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 14:51:22-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:E6CBA932D03FAA08736F017DDFBD1B5E
2018-12-21 14:51:22-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122114512206845</product_id><nonce_str>nro853os1rdcru2h5acb1br7a4fkvcw8</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122114512206845</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221145122</time_start><time_expire>20181221145622</time_expire><sign>E6CBA932D03FAA08736F017DDFBD1B5E</sign></xml>
2018-12-21 14:51:23-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[PJd0ZmfMXI6wl7R6]]></nonce_str>
<sign><![CDATA[9A1BA40F1284CC710C19A1AC085270DE]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx211451238013993a395f47143604628830]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=ZAYITf5]]></code_url>
</xml>
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221145123cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 14:51:23.267(Timestamp), 440(Integer), 1(Integer), 798789789745451231(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122114512206845(String), null, 2018-12-21 14:51:23.267(Timestamp), 1(Integer), 2018-12-21 14:51:11.94(Timestamp)
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 14:51:23-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：9a8aeae154eff5ce8a67f99c0c4fb78b
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-21 15:05:48-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 15:18:49-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 15:18:49-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:18:49-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:18:49-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:18:49-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@4cc26964
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 798789789745451231(String)
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=440, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 14:51:22 CST 2018]
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122114512206845(String)
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=440, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 14:51:22 CST 2018]
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=440, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 14:51:22 CST 2018]
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122114512206845(String), 798789789745451231(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 14:51:22.069(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 14:51:22.069(Timestamp), 2018-12-21 14:51:22.069(Timestamp), 18122114512206845(String)
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:18:50.977(Timestamp), 440(Integer), 1(Integer), 798789789745451231(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:18:50 CST 2018, id=328, orderId=440, orgId=1, outerOrderSn=798789789745451231, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 15:18:50.98(Timestamp), 0(Integer), 440(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221151850953(String), null
2018-12-21 15:18:50-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 15:18:55-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：798789789745451231, 退款id: 50000609072018122107578782039
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 15:18:50.98(Timestamp), 75(Integer), 0(Integer), 440(Integer), 0.01(BigDecimal), 3(Integer), 50000609072018122107578782039(String), 20181221151850953(String), 2018-12-21 15:18:55.383(Timestamp), 75(Integer)
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=440, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:18:55 CST 2018]
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122114512206845(String)
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=440, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 14:51:22 CST 2018]
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=440, createTime=Fri Dec 21 14:51:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=798789789745451231, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122114512206845, payTime=Fri Dec 21 14:51:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:18:55 CST 2018]
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122114512206845(String), 798789789745451231(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 14:51:22.069(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 14:51:22.069(Timestamp), 2018-12-21 15:18:55.399(Timestamp), 18122114512206845(String)
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:18:55.404(Timestamp), 440(Integer), 1(Integer), 798789789745451231(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:18:55 CST 2018, id=329, orderId=440, orgId=1, outerOrderSn=798789789745451231, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 15:18:55-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@7b42d699[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=7892311523498498135&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377265739&userId=1
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=7892311523498498135&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377265739&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=7892311523498498135, orgId=1, payAmount=0.01, payType=001, tradeTime=1545377265739, userId=1}
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=7892311523498498135&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377265739&userId=1
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=7892311523498498135&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377265739&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[d8fe6337d01b6a8773dccd5ca25abe3a]，客户端签名：[c94f51c8db650a6fb41c16ee89fb75d6]
2018-12-21 15:27:57-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：7892311523498498135
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 7892311523498498135(String)
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:27:57 CST 2018]
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 15:27:57.978(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 7892311523498498135(String), 001(String), wechatNative(String), 0(Integer), 18122115275797843(String), 2018-12-21 15:27:57.978(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 15:27:57.978(Timestamp)
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 15:27:57.981(Timestamp), 443(Integer), 1(Integer), 7892311523498498135(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 15:27:57 CST 2018, id=334, orderId=443, orgId=1, outerOrderSn=7892311523498498135, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 15:27:57.991(Timestamp), null, null, 443(Integer), 18122115275797843(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 15:27:57-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:27:58-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=byui5uxpvc5sdx0t2n15n32us6s8gn14&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122115275797843&product_id=18122115275797843&spbill_create_ip=192.168.2.121&time_expire=20181221153258&time_start=20181221152758&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 15:27:58-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:55A479B93CAEDF94F218E41CD6388C12
2018-12-21 15:27:58-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122115275797843</product_id><nonce_str>byui5uxpvc5sdx0t2n15n32us6s8gn14</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122115275797843</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221152758</time_start><time_expire>20181221153258</time_expire><sign>55A479B93CAEDF94F218E41CD6388C12</sign></xml>
2018-12-21 15:27:58-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[pAwFQ296dS0BSEsj]]></nonce_str>
<sign><![CDATA[52909EB4267C8FCC44D95BD0924CCDA4]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx211527591592535d5af049bd3561718805]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=bZ78jt6]]></code_url>
</xml>
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221152758cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 15:27:58.569(Timestamp), 443(Integer), 1(Integer), 7892311523498498135(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122115275797843(String), null, 2018-12-21 15:27:58.569(Timestamp), 1(Integer), 2018-12-21 15:27:45.739(Timestamp)
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 15:27:58-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：3f805004eb02b9731abf675eb2a6b4da
2018-12-21 15:30:26-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 15:30:26-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:30:26-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:30:26-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:30:26-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@1c2fc5ad
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 7892311523498498135(String)
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=443, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:27:57 CST 2018]
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115275797843(String)
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=443, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:27:57 CST 2018]
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=443, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:27:57 CST 2018]
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115275797843(String), 7892311523498498135(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 15:27:57.978(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:27:57.978(Timestamp), 2018-12-21 15:27:57.978(Timestamp), 18122115275797843(String)
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:30:27.559(Timestamp), 443(Integer), 1(Integer), 7892311523498498135(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:30:27 CST 2018, id=335, orderId=443, orgId=1, outerOrderSn=7892311523498498135, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 15:30:27.561(Timestamp), 0(Integer), 443(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221153027548(String), null
2018-12-21 15:30:27-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 15:30:30-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：7892311523498498135, 退款id: 50000309252018122107578802806
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 15:30:27.561(Timestamp), 76(Integer), 0(Integer), 443(Integer), 0.01(BigDecimal), 3(Integer), 50000309252018122107578802806(String), 20181221153027548(String), 2018-12-21 15:30:30.212(Timestamp), 76(Integer)
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=443, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:30:30 CST 2018]
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115275797843(String)
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=443, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:27:57 CST 2018]
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=443, createTime=Fri Dec 21 15:27:57 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=7892311523498498135, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115275797843, payTime=Fri Dec 21 15:27:57 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:30:30 CST 2018]
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115275797843(String), 7892311523498498135(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 15:27:57.978(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:27:57.978(Timestamp), 2018-12-21 15:30:30.214(Timestamp), 18122115275797843(String)
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:30:30.219(Timestamp), 443(Integer), 1(Integer), 7892311523498498135(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:30:30 CST 2018, id=336, orderId=443, orgId=1, outerOrderSn=7892311523498498135, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 15:30:30-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@6f0b35f2[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=78675463876789/&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377570990&userId=1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=78675463876789/&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377570990&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=78675463876789/, orgId=1, payAmount=0.01, payType=001, tradeTime=1545377570990, userId=1}
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=78675463876789/&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377570990&userId=1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=78675463876789/&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377570990&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[c5393f9cbfac43c90e5c705297a01ada]，客户端签名：[d119df164f7072f3812f6deaa02b10fd]
2018-12-21 15:33:06-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：78675463876789/
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 78675463876789/(String)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:33:06 CST 2018]
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 15:33:06.868(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 78675463876789/(String), 001(String), wechatNative(String), 0(Integer), 18122115330686802(String), 2018-12-21 15:33:06.868(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 15:33:06.868(Timestamp)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 15:33:06.871(Timestamp), 445(Integer), 1(Integer), 78675463876789/(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 15:33:06 CST 2018, id=338, orderId=445, orgId=1, outerOrderSn=78675463876789/, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 15:33:06.881(Timestamp), null, null, 445(Integer), 18122115330686802(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:33:06-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:33:06-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=9raoepaergxm4jsx8s7fe2d8r3feanno&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122115330686802&product_id=18122115330686802&spbill_create_ip=192.168.2.121&time_expire=20181221153806&time_start=20181221153306&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 15:33:06-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:5672C08CFFFD1CE54F46CC0923CCCEB4
2018-12-21 15:33:06-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122115330686802</product_id><nonce_str>9raoepaergxm4jsx8s7fe2d8r3feanno</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122115330686802</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221153306</time_start><time_expire>20181221153806</time_expire><sign>5672C08CFFFD1CE54F46CC0923CCCEB4</sign></xml>
2018-12-21 15:33:07-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[9AFilHj4hK79tBcz]]></nonce_str>
<sign><![CDATA[1DFD99945A8CC02390314D9FCF2A51BA]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx2115330799663222b611499d2299659162]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=2JJVdtd]]></code_url>
</xml>
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221153307cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 15:33:07.383(Timestamp), 445(Integer), 1(Integer), 78675463876789/(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122115330686802(String), null, 2018-12-21 15:33:07.383(Timestamp), 1(Integer), 2018-12-21 15:32:50.99(Timestamp)
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 15:33:07-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：ec54027ca19d7a343f0e9de8c3b2d830
2018-12-21 15:35:27-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 15:35:27-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:35:27-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:35:27-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:35:27-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@6cd9a0d0
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 78675463876789/(String)
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=445, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:33:06 CST 2018]
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115330686802(String)
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=445, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:33:06 CST 2018]
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=445, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:33:06 CST 2018]
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115330686802(String), 78675463876789/(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 15:33:06.868(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:33:06.868(Timestamp), 2018-12-21 15:33:06.868(Timestamp), 18122115330686802(String)
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:35:28.91(Timestamp), 445(Integer), 1(Integer), 78675463876789/(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:35:28 CST 2018, id=339, orderId=445, orgId=1, outerOrderSn=78675463876789/, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 15:35:28.913(Timestamp), 0(Integer), 445(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221153528880(String), null
2018-12-21 15:35:28-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 15:35:31-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：78675463876789/, 退款id: 50000509212018122107642054684
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 15:35:28.913(Timestamp), 77(Integer), 0(Integer), 445(Integer), 0.01(BigDecimal), 3(Integer), 50000509212018122107642054684(String), 20181221153528880(String), 2018-12-21 15:35:31.453(Timestamp), 77(Integer)
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=445, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:35:31 CST 2018]
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115330686802(String)
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=445, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:33:06 CST 2018]
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=445, createTime=Fri Dec 21 15:33:06 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=78675463876789/, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115330686802, payTime=Fri Dec 21 15:33:06 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:35:31 CST 2018]
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115330686802(String), 78675463876789/(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 15:33:06.868(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:33:06.868(Timestamp), 2018-12-21 15:35:31.456(Timestamp), 18122115330686802(String)
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:35:31.462(Timestamp), 445(Integer), 1(Integer), 78675463876789/(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:35:31 CST 2018, id=340, orderId=445, orgId=1, outerOrderSn=78675463876789/, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 15:35:31-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@7cc0019a[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=87897894564564123123&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377818800&userId=1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=87897894564564123123&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377818800&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=87897894564564123123, orgId=1, payAmount=0.01, payType=001, tradeTime=1545377818800, userId=1}
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=87897894564564123123&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377818800&userId=1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=87897894564564123123&orgId=1&payAmount=0.01&payType=001&tradeTime=1545377818800&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[e203a3f24a5eecc697289323935c4edd]，客户端签名：[b8819ed092c250e8885dd7acbe596436]
2018-12-21 15:37:14-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：87897894564564123123
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 87897894564564123123(String)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:37:14 CST 2018]
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 15:37:14.572(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 87897894564564123123(String), 001(String), wechatNative(String), 0(Integer), 18122115371457225(String), 2018-12-21 15:37:14.572(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 15:37:14.572(Timestamp)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 15:37:14.584(Timestamp), 446(Integer), 1(Integer), 87897894564564123123(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 15:37:14 CST 2018, id=341, orderId=446, orgId=1, outerOrderSn=87897894564564123123, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 15:37:14.586(Timestamp), null, null, 446(Integer), 18122115371457225(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:37:14-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:37:14-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=1rhr3h05qi3ga7n3n4emunijwmc0xslc&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122115371457225&product_id=18122115371457225&spbill_create_ip=192.168.2.121&time_expire=20181221154214&time_start=20181221153714&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 15:37:14-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:92F706DB071C9A1884509B71BFA1241D
2018-12-21 15:37:14-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122115371457225</product_id><nonce_str>1rhr3h05qi3ga7n3n4emunijwmc0xslc</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122115371457225</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221153714</time_start><time_expire>20181221154214</time_expire><sign>92F706DB071C9A1884509B71BFA1241D</sign></xml>
2018-12-21 15:37:15-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[CdZvKLCQ1YJeuEKv]]></nonce_str>
<sign><![CDATA[626A9EB92B4999473F551C734DE04D0D]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx211537157154689f600dda350488256144]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=u5o7l71]]></code_url>
</xml>
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221153715cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 15:37:15.104(Timestamp), 446(Integer), 1(Integer), 87897894564564123123(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122115371457225(String), null, 2018-12-21 15:37:15.104(Timestamp), 1(Integer), 2018-12-21 15:36:58.8(Timestamp)
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 15:37:15-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：f91ad2f9fa370b1bba90be2fa9078bae
2018-12-21 15:47:52-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 15:47:52-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:47:52-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:47:52-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:47:52-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@63d09011
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 87897894564564123123(String)
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=446, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:37:14 CST 2018]
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115371457225(String)
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=446, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:37:14 CST 2018]
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=446, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:37:14 CST 2018]
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115371457225(String), 87897894564564123123(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 15:37:14.572(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:37:14.572(Timestamp), 2018-12-21 15:37:14.572(Timestamp), 18122115371457225(String)
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:47:53.525(Timestamp), 446(Integer), 1(Integer), 87897894564564123123(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:47:53 CST 2018, id=342, orderId=446, orgId=1, outerOrderSn=87897894564564123123, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 15:47:53.526(Timestamp), 0(Integer), 446(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221154753443(String), null
2018-12-21 15:47:53-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 15:47:56-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：87897894564564123123, 退款id: 50000709062018122107632720384
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 15:47:53.526(Timestamp), 78(Integer), 0(Integer), 446(Integer), 0.01(BigDecimal), 3(Integer), 50000709062018122107632720384(String), 20181221154753443(String), 2018-12-21 15:47:56.485(Timestamp), 78(Integer)
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=446, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:47:56 CST 2018]
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115371457225(String)
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=446, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:37:14 CST 2018]
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=446, createTime=Fri Dec 21 15:37:14 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=87897894564564123123, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115371457225, payTime=Fri Dec 21 15:37:14 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:47:56 CST 2018]
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115371457225(String), 87897894564564123123(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 15:37:14.572(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:37:14.572(Timestamp), 2018-12-21 15:47:56.488(Timestamp), 18122115371457225(String)
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:47:56.544(Timestamp), 446(Integer), 1(Integer), 87897894564564123123(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:47:56 CST 2018, id=343, orderId=446, orgId=1, outerOrderSn=87897894564564123123, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 15:47:56-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@4974f301[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=576874525678654678&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378662142&userId=1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=576874525678654678&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378662142&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=576874525678654678, orgId=1, payAmount=0.01, payType=001, tradeTime=1545378662142, userId=1}
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=576874525678654678&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378662142&userId=1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=576874525678654678&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378662142&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[9ddbdc08dd13e799acd4b260646a7d7b]，客户端签名：[0b3c900136fb895798c9f18c881d838f]
2018-12-21 15:51:09-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：576874525678654678
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 576874525678654678(String)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:51:09 CST 2018]
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 15:51:09.418(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 576874525678654678(String), 001(String), wechatNative(String), 0(Integer), 18122115510941870(String), 2018-12-21 15:51:09.418(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 15:51:09.418(Timestamp)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 15:51:09.42(Timestamp), 447(Integer), 1(Integer), 576874525678654678(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 15:51:09 CST 2018, id=344, orderId=447, orgId=1, outerOrderSn=576874525678654678, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 15:51:09.421(Timestamp), null, null, 447(Integer), 18122115510941870(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:51:09-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:51:09-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=isg4y9ify5vmpwcmuw6clsd2aypy6nlf&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122115510941870&product_id=18122115510941870&spbill_create_ip=192.168.2.121&time_expire=20181221155609&time_start=20181221155109&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 15:51:09-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:EDD0B103EE2385B068E5646DD406156D
2018-12-21 15:51:09-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122115510941870</product_id><nonce_str>isg4y9ify5vmpwcmuw6clsd2aypy6nlf</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122115510941870</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221155109</time_start><time_expire>20181221155609</time_expire><sign>EDD0B103EE2385B068E5646DD406156D</sign></xml>
2018-12-21 15:51:10-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[qd8LVJMRPW08EXWs]]></nonce_str>
<sign><![CDATA[B74A1DADB326FC71F664A1A9FFC66882]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx211551107005115867f3c68f0566093421]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=95Ekzz0]]></code_url>
</xml>
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221155110cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 15:51:10.074(Timestamp), 447(Integer), 1(Integer), 576874525678654678(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122115510941870(String), null, 2018-12-21 15:51:10.074(Timestamp), 1(Integer), 2018-12-21 15:51:02.142(Timestamp)
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 15:51:10-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：82e9660237f203d826e2856afb2e6333
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@4f03aa66
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 576874525678654678(String)
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=447, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:51:09 CST 2018]
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115510941870(String)
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=447, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:51:09 CST 2018]
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=447, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:51:09 CST 2018]
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115510941870(String), 576874525678654678(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 15:51:09.418(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:51:09.418(Timestamp), 2018-12-21 15:51:09.418(Timestamp), 18122115510941870(String)
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:51:59.255(Timestamp), 447(Integer), 1(Integer), 576874525678654678(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:51:59 CST 2018, id=345, orderId=447, orgId=1, outerOrderSn=576874525678654678, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 15:51:59.256(Timestamp), 0(Integer), 447(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221155159249(String), null
2018-12-21 15:51:59-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 15:52:00-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：576874525678654678, 退款id: 50000709202018122107602547504
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 15:51:59.256(Timestamp), 79(Integer), 0(Integer), 447(Integer), 0.01(BigDecimal), 3(Integer), 50000709202018122107602547504(String), 20181221155159249(String), 2018-12-21 15:52:00.663(Timestamp), 79(Integer)
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=447, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:52:00 CST 2018]
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115510941870(String)
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=447, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:51:09 CST 2018]
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=447, createTime=Fri Dec 21 15:51:09 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=576874525678654678, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115510941870, payTime=Fri Dec 21 15:51:09 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:52:00 CST 2018]
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115510941870(String), 576874525678654678(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 15:51:09.418(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:51:09.418(Timestamp), 2018-12-21 15:52:00.664(Timestamp), 18122115510941870(String)
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:52:00.677(Timestamp), 447(Integer), 1(Integer), 576874525678654678(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:52:00 CST 2018, id=346, orderId=447, orgId=1, outerOrderSn=576874525678654678, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 15:52:00-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@7dc04f82[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=45648945645645646&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378766108&userId=1
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=45648945645645646&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378766108&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=45648945645645646, orgId=1, payAmount=0.01, payType=001, tradeTime=1545378766108, userId=1}
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=45648945645645646&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378766108&userId=1
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=45648945645645646&orgId=1&payAmount=0.01&payType=001&tradeTime=1545378766108&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[a30b977e36683107df160de47ab16803]，客户端签名：[c445189bb9e84b1d0076bd505894b0f7]
2018-12-21 15:53:02-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：45648945645645646
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648945645645646(String)
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:53:02 CST 2018]
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 15:53:02.76(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 45648945645645646(String), 001(String), wechatNative(String), 0(Integer), 18122115530276040(String), 2018-12-21 15:53:02.76(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 15:53:02.76(Timestamp)
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 15:53:02-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 15:53:02.951(Timestamp), 448(Integer), 1(Integer), 45648945645645646(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 15:53:02 CST 2018, id=347, orderId=448, orgId=1, outerOrderSn=45648945645645646, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 15:53:03.022(Timestamp), null, null, 448(Integer), 18122115530276040(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:53:03-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=sfk34wtgf51lts9gvxu9bmcb2sy8yp9k&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122115530276040&product_id=18122115530276040&spbill_create_ip=192.168.2.121&time_expire=20181221155803&time_start=20181221155303&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 15:53:03-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:9C3338EBE82A43B10BD2898BC0186161
2018-12-21 15:53:03-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122115530276040</product_id><nonce_str>sfk34wtgf51lts9gvxu9bmcb2sy8yp9k</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122115530276040</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221155303</time_start><time_expire>20181221155803</time_expire><sign>9C3338EBE82A43B10BD2898BC0186161</sign></xml>
2018-12-21 15:53:03-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[qrY39wUddXM7BeNT]]></nonce_str>
<sign><![CDATA[A42963CBCC1BE00C5A7FB2A4C4EABFBF]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx21155304139646d9e0c6fe4b0040797283]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=YdBS29F]]></code_url>
</xml>
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221155303cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 15:53:03.501(Timestamp), 448(Integer), 1(Integer), 45648945645645646(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122115530276040(String), null, 2018-12-21 15:53:03.501(Timestamp), 1(Integer), 2018-12-21 15:52:46.108(Timestamp)
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 15:53:03-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：06773e351649f34f45ee07535bea59ed
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@56017750
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 15:55:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 45648945645645646(String)
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=448, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:53:02 CST 2018]
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115530276040(String)
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=448, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:53:02 CST 2018]
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=448, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:53:02 CST 2018]
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115530276040(String), 45648945645645646(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 15:53:02.76(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:53:02.76(Timestamp), 2018-12-21 15:53:02.76(Timestamp), 18122115530276040(String)
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:55:38.038(Timestamp), 448(Integer), 1(Integer), 45648945645645646(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:55:38 CST 2018, id=348, orderId=448, orgId=1, outerOrderSn=45648945645645646, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 15:55:38.04(Timestamp), 0(Integer), 448(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221155537885(String), null
2018-12-21 15:55:38-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 15:55:39-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：45648945645645646, 退款id: 50000409242018122107645304608
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 15:55:38.04(Timestamp), 80(Integer), 0(Integer), 448(Integer), 0.01(BigDecimal), 3(Integer), 50000409242018122107645304608(String), 20181221155537885(String), 2018-12-21 15:55:39.448(Timestamp), 80(Integer)
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=448, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:55:39 CST 2018]
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122115530276040(String)
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=448, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:53:02 CST 2018]
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=448, createTime=Fri Dec 21 15:53:02 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=45648945645645646, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122115530276040, payTime=Fri Dec 21 15:53:02 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 15:55:39 CST 2018]
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122115530276040(String), 45648945645645646(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 15:53:02.76(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 15:53:02.76(Timestamp), 2018-12-21 15:55:39.476(Timestamp), 18122115530276040(String)
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 15:55:39.485(Timestamp), 448(Integer), 1(Integer), 45648945645645646(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 15:55:39 CST 2018, id=349, orderId=448, orgId=1, outerOrderSn=45648945645645646, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 15:55:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@726fc819[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=465456498789789564564&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379346096&userId=1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=465456498789789564564&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379346096&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=465456498789789564564, orgId=1, payAmount=0.01, payType=001, tradeTime=1545379346096, userId=1}
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=465456498789789564564&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379346096&userId=1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=465456498789789564564&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379346096&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[3fd6d053acb6ac59e460def931b0f27f]，客户端签名：[9654ff1a260b6f526532eec2210cf681]
2018-12-21 16:02:37-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：465456498789789564564
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 465456498789789564564(String)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:02:37 CST 2018]
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 16:02:37.501(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 465456498789789564564(String), 001(String), wechatNative(String), 0(Integer), 18122116023750115(String), 2018-12-21 16:02:37.501(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 16:02:37.501(Timestamp)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 16:02:37.503(Timestamp), 449(Integer), 1(Integer), 465456498789789564564(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 16:02:37 CST 2018, id=350, orderId=449, orgId=1, outerOrderSn=465456498789789564564, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 16:02:37.504(Timestamp), null, null, 449(Integer), 18122116023750115(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 16:02:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 16:02:37-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=jdmv40p3kjdf8irnqas0tu0ohdxj3qfd&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122116023750115&product_id=18122116023750115&spbill_create_ip=192.168.2.121&time_expire=20181221160737&time_start=20181221160237&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 16:02:37-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:30A2BC129BC809F4CCA4ED310E706DCB
2018-12-21 16:02:37-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122116023750115</product_id><nonce_str>jdmv40p3kjdf8irnqas0tu0ohdxj3qfd</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122116023750115</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221160237</time_start><time_expire>20181221160737</time_expire><sign>30A2BC129BC809F4CCA4ED310E706DCB</sign></xml>
2018-12-21 16:02:38-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[QMSDb6T6aW9JGunT]]></nonce_str>
<sign><![CDATA[CDA08C0CCF6A4B1BCB750CBF52570711]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx21160238657945fb8bc1591c2222134559]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=9Nurbbc]]></code_url>
</xml>
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221160238cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 16:02:38.034(Timestamp), 449(Integer), 1(Integer), 465456498789789564564(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122116023750115(String), null, 2018-12-21 16:02:38.034(Timestamp), 1(Integer), 2018-12-21 16:02:26.096(Timestamp)
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 16:02:38-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：33769443c66a079c068fde3600d73843
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@c00e349
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 465456498789789564564(String)
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=449, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:02:37 CST 2018]
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122116023750115(String)
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=449, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:02:37 CST 2018]
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=449, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:02:37 CST 2018]
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122116023750115(String), 465456498789789564564(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 16:02:37.501(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 16:02:37.501(Timestamp), 2018-12-21 16:02:37.501(Timestamp), 18122116023750115(String)
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 16:04:36.981(Timestamp), 449(Integer), 1(Integer), 465456498789789564564(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 16:04:36 CST 2018, id=351, orderId=449, orgId=1, outerOrderSn=465456498789789564564, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 16:04:36.982(Timestamp), 0(Integer), 449(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221160436976(String), null
2018-12-21 16:04:36-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 16:04:38-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：465456498789789564564, 退款id: 50000509002018122107645355012
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 16:04:36.982(Timestamp), 81(Integer), 0(Integer), 449(Integer), 0.01(BigDecimal), 3(Integer), 50000509002018122107645355012(String), 20181221160436976(String), 2018-12-21 16:04:38.282(Timestamp), 81(Integer)
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=449, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:04:38 CST 2018]
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122116023750115(String)
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=449, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:02:37 CST 2018]
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=449, createTime=Fri Dec 21 16:02:37 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=465456498789789564564, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116023750115, payTime=Fri Dec 21 16:02:37 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:04:38 CST 2018]
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122116023750115(String), 465456498789789564564(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 16:02:37.501(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 16:02:37.501(Timestamp), 2018-12-21 16:04:38.284(Timestamp), 18122116023750115(String)
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 16:04:38.289(Timestamp), 449(Integer), 1(Integer), 465456498789789564564(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 16:04:38 CST 2018, id=352, orderId=449, orgId=1, outerOrderSn=465456498789789564564, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 16:04:38-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 客户端排序后参数集：cn.wellcare.pojo.common.RpcResult@24ab36f[success=true,data=<null>,pagerInfo=<null>,msgCode=200,msgInfo=请求成功]
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.portal.controller.demo.DemoUnifyPaymentController - 机构密钥：e10adc3949ba59abbe56e057f20f883e
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=4564561231231456465&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379574638&userId=1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：clientIp=0:0:0:0:0:0:0:1&encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=4564561231231456465&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379574638&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权开始...
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - ----------金额处理 ----------
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 支付金额：0.01
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 格式化后值：0.01
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 排序后参数集：{encryptPwd=1, encryptUser=777290058110048, notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify, orderId=4564561231231456465, orgId=1, payAmount=0.01, payType=001, tradeTime=1545379574638, userId=1}
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==>  Preparing: select auth_name, auth_pwd, auth_secret, id, org_code, org_index, org_name, py_code, role_id, short_name, status from sys_organization where id = ? 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - ==> Parameters: 1(Integer)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.system.SysOrganizationDao.get - <==      Total: 1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 查询字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=4564561231231456465&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379574638&userId=1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：encryptPwd=1&encryptUser=777290058110048&notifyUrl=http://zhaihl.free.idcfengye.com/demo/serverNotify&orderId=4564561231231456465&orgId=1&payAmount=0.01&payType=001&tradeTime=1545379574638&userId=1e10adc3949ba59abbe56e057f20f883e
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务器签名：[91f4c3be8a8ed930c8503f0c8f20e0b2]，客户端签名：[82e0f7455d10e0014e4987e57a06d5a0]
2018-12-21 16:06:22-->[ERROR] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 签名错误！！！
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.authentication.PaymentAuthenticationAspect - 服务鉴权完毕，没有异常...
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 通知环绕切面，目标类：cn.wellcare.service.transaction.order.OrderService
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 业务订单号：4564561231231456465
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 4564561231231456465(String)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 0
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.service.transaction.order.OrderService - 创建订单
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=null, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=1, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=0, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:06:22 CST 2018]
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==>  Preparing: insert into pay_order ( handle_num, handle_name, account_id, create_time, finish_time, money_order, money_paid_balance, money_paid_reality, order_state, order_type, org_id, outer_order_sn, payment_code, payment_name, payment_status, pay_sn, pay_time, relation_order_sn, remark, req_ip, trade_sn, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - ==> Parameters: null, null, null, 2018-12-21 16:06:22.643(Timestamp), null, 0.01(BigDecimal), null, null, 1(Integer), 001(String), 1(Integer), 4564561231231456465(String), 001(String), wechatNative(String), 0(Integer), 18122116062264254(String), 2018-12-21 16:06:22.643(Timestamp), null, wechatNative(String), 0:0:0:0:0:0:0:1(String), null, 2018-12-21 16:06:22.643(Timestamp)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.save - <==    Updates: 1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0(BigDecimal), 0(BigDecimal), 创建订单(String), 2018-12-21 16:06:22.644(Timestamp), 450(Integer), 1(Integer), 4564561231231456465(String), 0(Integer), 0(Integer), 1(Integer), 1(Integer)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0, amountPrev=0, content=创建订单, createTime=Fri Dec 21 16:06:22 CST 2018, id=353, orderId=450, orgId=1, outerOrderSn=4564561231231456465, paymentAfter=0, paymentPrev=0, statusAfter=1, statusPrev=1]
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.aop.notify.PaymentNotifyAspect - 创建通知。。。
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==>  Preparing: insert into pay_notify ( back_url, body, gmt_close, gmt_payment, gmt_refund, notify_time, order_id, outer_order_sn, org_id, refund_fee, send_back_fee, sign, sign_type, total_amount, trade_no, trade_status ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - ==> Parameters: http://zhaihl.free.idcfengye.com/demo/serverNotify(String), wechatNative(String), null, 2018-12-21 16:06:22.646(Timestamp), null, null, 450(Integer), 18122116062264254(String), 1(Integer), null, null, null, MD5(String), 0.01(BigDecimal), null, 1(Integer)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.notify.PayNotifyDao.save - <==    Updates: 1
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 16:06:22-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 16:06:22-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay md5 sb:appid=wx001da85510cce45a&body=佑君支付中心订单&mch_id=1503136041&nonce_str=wquas1aoo2r1ha0c9s0rxa11d941j1a7&notify_url=null/unifyPay/wechatNotify&out_trade_no=18122116062264254&product_id=18122116062264254&spbill_create_ip=192.168.2.121&time_expire=20181221161122&time_start=20181221160622&total_fee=1&trade_type=NATIVE&key=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUzkey=PpG8vfoA85C8RNPWbnWSqrkPuyzBhzUz
2018-12-21 16:06:22-->[INFO] cn.wellcare.handler.transaction.payment.wechat.WechatNativeBasePayHandler - WXPay packge签名:A5A0EB2DA88E410B256F7006B0354A4D
2018-12-21 16:06:22-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - xmlParam:<xml><appid>wx001da85510cce45a</appid><mch_id>1503136041</mch_id><product_id>18122116062264254</product_id><nonce_str>wquas1aoo2r1ha0c9s0rxa11d941j1a7</nonce_str><body>佑君支付中心订单</body><out_trade_no>18122116062264254</out_trade_no><total_fee>1</total_fee><spbill_create_ip>192.168.2.121</spbill_create_ip><notify_url>null/unifyPay/wechatNotify</notify_url><trade_type>NATIVE</trade_type><time_start>20181221160622</time_start><time_expire>20181221161122</time_expire><sign>A5A0EB2DA88E410B256F7006B0354A4D</sign></xml>
2018-12-21 16:06:23-->[INFO] cn.wellcare.service.transaction.payment.wechat.util.GetWxOrderno - wexinPay getPrepayId json:<xml><return_code><![CDATA[SUCCESS]]></return_code>
<return_msg><![CDATA[OK]]></return_msg>
<appid><![CDATA[wx001da85510cce45a]]></appid>
<mch_id><![CDATA[1503136041]]></mch_id>
<nonce_str><![CDATA[GuYVka8RkO4SUzLT]]></nonce_str>
<sign><![CDATA[774052779FEB4803072B3AE452B28900]]></sign>
<result_code><![CDATA[SUCCESS]]></result_code>
<prepay_id><![CDATA[wx2116062378159680d3ffcafd0381052064]]></prepay_id>
<trade_type><![CDATA[NATIVE]]></trade_type>
<code_url><![CDATA[weixin://wxpay/bizpayurl?pr=R5oc6Yo]]></code_url>
</xml>
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志切面，目标类：cn.wellcare.service.transaction.payment.wechat.WechatNativeService
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.core.utils.Md5SignUtil - 要签名的字符串：20181221160623cn.wellcare.aop.log.PayLogHandlerAspect
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==>  Preparing: insert into pay_log ( handle_num, handle_name, create_time, order_id, org_id, outer_order_sn, payment_code, payment_name, pay_money, pay_sn, trade_sn, update_time, op_type, client_trade_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - ==> Parameters: null, null, 2018-12-21 16:06:23.141(Timestamp), 450(Integer), 1(Integer), 4564561231231456465(String), 001(String), wechatNative(String), 0.01(BigDecimal), 18122116062264254(String), null, 2018-12-21 16:06:23.141(Timestamp), 1(Integer), 2018-12-21 16:06:14.638(Timestamp)
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.dao.log.PayLogDao.save - <==    Updates: 1
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 支付日志保存成功！
2018-12-21 16:06:23-->[DEBUG] cn.wellcare.aop.log.PayLogHandlerAspect - 当前类：cn.wellcare.aop.log.PayLogHandlerAspect@6c1cc4d2，签名：2efe77e43d84d9d57f7ef76c2b23c4b8
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 初始化微信配置。。。
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==>  Preparing: select access_token, appid, app_scope, appsecret, code_addr, create_order_url, customer_state, enable_notify, id, key, mchid, notify_url, oauth2_token, oauth2_url, order_name, org_id, status, user_info from pay_setting_wechat where org_id = ? and status=1 limit 1 
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - ==> Parameters: 1(Integer)
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.payset.PaySettingWechatDao.getByOrg - <==      Total: 1
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.service.settins.WechatSettings - 证书流：java.io.BufferedInputStream@222580e8
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and outer_order_sn = ? 
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 4564561231231456465(String)
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=450, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:06:22 CST 2018]
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122116062264254(String)
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=450, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=6, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:06:22 CST 2018]
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=450, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:06:22 CST 2018]
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122116062264254(String), 4564561231231456465(String), 001(String), 1(Integer), 2(Integer), 2018-12-21 16:06:22.643(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 16:06:22.643(Timestamp), 2018-12-21 16:06:22.643(Timestamp), 18122116062264254(String)
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 16:08:37.937(Timestamp), 450(Integer), 1(Integer), 4564561231231456465(String), 1(Integer), 1(Integer), 2(Integer), 6(Integer)
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 16:08:37 CST 2018, id=354, orderId=450, orgId=1, outerOrderSn=4564561231231456465, paymentAfter=1, paymentPrev=1, statusAfter=2, statusPrev=6]
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==>  Preparing: insert into pay_refund ( create_time, ispartial, order_id, refund_amount, status, trade_sn, apply_no, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - ==> Parameters: 2018-12-21 16:08:37.938(Timestamp), 0(Integer), 450(Integer), 0.01(BigDecimal), 1(Integer), null, 20181221160837933(String), null
2018-12-21 16:08:37-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.save - <==    Updates: 1
2018-12-21 16:08:39-->[ERROR] cn.wellcare.service.transaction.refund.wechat.WxNativeRefundPayService - 返回交易码：SUCCESS, 退款单号：4564561231231456465, 退款id: 50000409162018122107604421066
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==>  Preparing: update pay_refund SET create_time= ?, id= ?, ispartial= ?, order_id= ?, refund_amount= ?, status= ?, trade_sn= ?, apply_no= ?, update_time= ? where id = ? 
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - ==> Parameters: 2018-12-21 16:08:37.938(Timestamp), 82(Integer), 0(Integer), 450(Integer), 0.01(BigDecimal), 3(Integer), 50000409162018122107604421066(String), 20181221160837933(String), 2018-12-21 16:08:39.25(Timestamp), 82(Integer)
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.refund.PayRefundDao.update - <==    Updates: 1
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录切面...
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单信息：PayOrder [id=450, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:08:39 CST 2018]
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==>  Preparing: select id, pay_sn, outer_order_sn, relation_order_sn, order_type, org_id, handle_num, handle_name,account_id, order_state, pay_time, payment_status, money_order, money_paid_balance, money_paid_reality, req_ip, payment_name, payment_code, remark, finish_time, trade_sn, create_time, update_time from pay_order where 1=1 and pay_sn = ? 
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - ==> Parameters: 18122116062264254(String)
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.queryList - <==      Total: 1
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 原订单信息：PayOrder [id=450, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=2, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:06:22 CST 2018]
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.model.base.OrderModel - OrderModel.updateOrder 参数：PayOrder [id=450, createTime=Fri Dec 21 16:06:22 CST 2018, finishTime=null, accountId=null, handleNum=null, handleName=null, moneyOrder=0.01, moneyPaidBalance=null, moneyPaidReality=null, orderState=3, orderType=001, orgId=1, outerOrderSn=4564561231231456465, paymentCode=001, paymentName=wechatNative, paymentStatus=1, paySn=18122116062264254, payTime=Fri Dec 21 16:06:22 CST 2018, relationOrderSn=null, remark=wechatNative, reqIp=0:0:0:0:0:0:0:1, tradeSn=null, updateTime=Fri Dec 21 16:08:39 CST 2018]
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==>  Preparing: update pay_order SET pay_sn = ?, outer_order_sn = ?, order_type = ?, org_id = ?, order_state = ?, pay_time = ?, payment_status = ?, money_order = ?, req_ip = ?, payment_name = ?, payment_code = ?, remark = ?, create_time = ?, update_time = ? where pay_sn = ? 
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - ==> Parameters: 18122116062264254(String), 4564561231231456465(String), 001(String), 1(Integer), 3(Integer), 2018-12-21 16:06:22.643(Timestamp), 1(Integer), 0.01(BigDecimal), 0:0:0:0:0:0:0:1(String), wechatNative(String), 001(String), wechatNative(String), 2018-12-21 16:06:22.643(Timestamp), 2018-12-21 16:08:39.253(Timestamp), 18122116062264254(String)
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.order.PayOrderDao.updateByOrderSn - <==    Updates: 1
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==>  Preparing: insert into pay_order_log ( handle_num, handle_name, amount_after, amount_prev, content, create_time, order_id, org_id, outer_order_sn, payment_after, payment_prev, status_after, status_prev ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - ==> Parameters: null, null, 0.01(BigDecimal), 0.01(BigDecimal), 更新订单(String), 2018-12-21 16:08:39.263(Timestamp), 450(Integer), 1(Integer), 4564561231231456465(String), 1(Integer), 1(Integer), 3(Integer), 2(Integer)
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.dao.log.PayOrderLogDao.save - <==    Updates: 1
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 操作记录保存成功：PayOrderLog [handleNum=null, handleName=null, amountAfter=0.01, amountPrev=0.01, content=更新订单, createTime=Fri Dec 21 16:08:39 CST 2018, id=355, orderId=450, orgId=1, outerOrderSn=4564561231231456465, paymentAfter=1, paymentPrev=1, statusAfter=3, statusPrev=2]
2018-12-21 16:08:39-->[DEBUG] cn.wellcare.aop.log.OrderHandlerAspect - 订单操作记录保存成功！
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-21 16:10:06-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 006(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 004(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 005(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 003(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 002(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==>  Preparing: select code_cd, code_div, code_text, create_time, sort_order, update_time, use_yn from sys_code_master where code_div = ? and code_cd = ? 
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - ==> Parameters: PAYMENT_TYPE(String), 001(String)
2018-12-21 16:10:07-->[DEBUG] cn.wellcare.dao.system.SysCodeMasterDao.get - <==      Total: 1
