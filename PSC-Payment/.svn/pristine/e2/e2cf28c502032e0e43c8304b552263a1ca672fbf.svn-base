<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace和dao对应  -->
<mapper namespace="cn.wellcare.dao.order.PayOrderDao">
	<resultMap id="PayOrderResult" type="cn.wellcare.entity.order.PayOrder">
		<result property="id" column="id" />
		<result property="accountId" column="account_id" />
		<result property="handleNum" column="handle_num" />
		<result property="handleName" column="handle_name" />
		<result property="createTime" column="create_time" />
		<result property="finishTime" column="finish_time" />
		<result property="moneyOrder" column="money_order" />
		<result property="moneyPaidBalance" column="money_paid_balance" />
		<result property="moneyPaidReality" column="money_paid_reality" />
		<result property="orderState" column="order_state" />
		<result property="orderType" column="order_type" />
		<result property="orgId" column="org_id" />
		<result property="outerOrderSn" column="outer_order_sn" />
		<result property="paymentCode" column="payment_code" />
		<result property="paymentName" column="payment_name" />
		<result property="paymentStatus" column="payment_status" />
		<result property="paySn" column="pay_sn" />
		<result property="payTime" column="pay_time" />
		<result property="relationOrderSn" column="relation_order_sn" />
		<result property="remark" column="remark" />
		<result property="reqIp" column="req_ip" />
		<result property="tradeSn" column="trade_sn" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<select id="get" parameterType="Integer" resultMap="PayOrderResult">
		select
			handle_num,
			handle_name,
			account_id,
			create_time,
			finish_time,
			id,
			money_order,
			money_paid_balance,
			money_paid_reality,
			order_state,
			order_type,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			payment_status,
			pay_sn,
			pay_time,
			relation_order_sn,
			remark,
			req_ip,
			trade_sn,
			update_time
		from pay_order
		where id = #{id}
	</select>

	<select id="getCount" parameterType="java.util.Map"
			resultType="java.lang.Integer">
		select count(1) from pay_order t1
		<include refid="whereConditions" />
	</select>

	<select id="getList" resultType="cn.wellcare.entity.order.PayOrder">
		select
		handle_num,
		handle_name,
		account_id,
		create_time,
		finish_time,
		id,
		money_order,
		money_paid_balance,
		money_paid_reality,
		order_state,
		order_type,
		org_id,
		outer_order_sn,
		payment_code,
		payment_name,
		payment_status,
		pay_sn,
		pay_time,
		relation_order_sn,
		remark,
		req_ip,
		trade_sn,
		update_time
		from pay_order
		<include refid="whereConditions" />
	</select>

	<!-- 查询条件 -->
	<sql id="whereConditions">
		where 1=1
		<trim  suffixOverrides="," >
			<if test="handleNum != null and handleNum !=''"  >
				and handle_num= #{handleNum}
			</if>
			<if test="handleName != null and handleName !=''"  >
				and handle_name= #{handleName}
			</if>
			<if test="accountId != null and accountId !=''"  >
				and account_id= #{accountId}
			</if>
			<if test="createTime != null and createTime !=''"  >
				and create_time= #{createTime}
			</if>
			<if test="finishTime != null and finishTime !=''"  >
				and finish_time= #{finishTime}
			</if>
			<if test="id != null and id !=''"  >
				and id= #{id}
			</if>
			<if test="moneyOrder != null and moneyOrder !=''"  >
				and money_order= #{moneyOrder}
			</if>
			<if test="moneyPaidBalance != null and moneyPaidBalance !=''"  >
				and money_paid_balance= #{moneyPaidBalance}
			</if>
			<if test="moneyPaidReality != null and moneyPaidReality !=''"  >
				and money_paid_reality= #{moneyPaidReality}
			</if>
			<if test="orderState != null and orderState !=''"  >
				and order_state= #{orderState}
			</if>
			<if test="orderType != null and orderType !=''"  >
				and order_type= #{orderType}
			</if>
			<if test="orgId != null and orgId !=''"  >
				and org_id= #{orgId}
			</if>
			<if test="outerOrderSn != null and outerOrderSn !=''"  >
				and outer_order_sn= #{outerOrderSn}
			</if>
			<if test="paymentCode != null and paymentCode !=''"  >
				and payment_code= #{paymentCode}
			</if>
			<if test="paymentName != null and paymentName !=''"  >
				and payment_name= #{paymentName}
			</if>
			<if test="paymentStatus != null and paymentStatus !=''"  >
				and payment_status= #{paymentStatus}
			</if>
			<if test="paySn != null and paySn !=''"  >
				and pay_sn= #{paySn}
			</if>
			<if test="payTime != null and payTime !=''"  >
				and pay_time= #{payTime}
			</if>
			<if test="relationOrderSn != null and relationOrderSn !=''"  >
				and relation_order_sn= #{relationOrderSn}
			</if>
			<if test="remark != null and remark !=''"  >
				and remark= #{remark}
			</if>
			<if test="reqIp != null and reqIp !=''"  >
				and req_ip= #{reqIp}
			</if>
			<if test="tradeSn != null and tradeSn !=''"  >
				and trade_sn= #{tradeSn}
			</if>
			<if test="updateTime != null and updateTime !=''"  >
				and update_time= #{updateTime}
			</if>
			<if test="q_outerOrderSn != null and q_outerOrderSn !=''"  >
				and outer_order_sn like CONCAT('%',#{q_outerOrderSn},'%')
			</if>
		</trim>
	</sql>

	<delete id="del">
        delete from pay_order where id = #{id}
	</delete>

	<update id="update" parameterType="cn.wellcare.entity.order.PayOrder">
		update pay_order
		<set>
			<if test="handleNum != null">handle_num= #{handleNum},</if>
			<if test="handleName != null">handle_name= #{handleName},</if>
			<if test="accountId != null">account_id= #{accountId},</if>
			<if test="createTime != null">create_time= #{createTime},</if>
			<if test="finishTime != null">finish_time= #{finishTime},</if>
			<if test="id != null">id= #{id},</if>
			<if test="moneyOrder != null">money_order= #{moneyOrder},</if>
			<if test="moneyPaidBalance != null">money_paid_balance= #{moneyPaidBalance},</if>
			<if test="moneyPaidReality != null">money_paid_reality= #{moneyPaidReality},</if>
			<if test="orderState != null">order_state= #{orderState},</if>
			<if test="orderType != null">order_type= #{orderType},</if>
			<if test="orgId != null">org_id= #{orgId},</if>
			<if test="outerOrderSn != null">outer_order_sn= #{outerOrderSn},</if>
			<if test="paymentCode != null">payment_code= #{paymentCode},</if>
			<if test="paymentName != null">payment_name= #{paymentName},</if>
			<if test="paymentStatus != null">payment_status= #{paymentStatus},</if>
			<if test="paySn != null">pay_sn= #{paySn},</if>
			<if test="payTime != null">pay_time= #{payTime},</if>
			<if test="relationOrderSn != null">relation_order_sn= #{relationOrderSn},</if>
			<if test="remark != null">remark= #{remark},</if>
			<if test="reqIp != null">req_ip= #{reqIp},</if>
			<if test="tradeSn != null">trade_sn= #{tradeSn},</if>
			<if test="updateTime != null">update_time= #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="getUnPaiedOrders" parameterType="String" resultMap="PayOrderResult">
		<![CDATA[
			select
				handle_num,
				handle_name,
				account_id,
				create_time,
				finish_time,
				id,
				money_order,
				money_paid_balance,
				money_paid_reality,
				order_state,
				order_type,
				org_id,
				outer_order_sn,
				payment_code,
				payment_name,
				payment_status,
				pay_sn,
				pay_time,
				relation_order_sn,
				remark,
				req_ip,
				trade_sn,
				update_time
			from pay_order
			where order_state = 1
				and payment_status = 0
				and create_time <= to_date(#{cancelTime},'YYYY-MM-DD HH24:MI:SS')
		]]>
	</select>
	
	<update id="cancelUnPaiedOrders" parameterType="cn.wellcare.entity.order.PayOrder">
		<![CDATA[
			update pay_order
			set
				finish_time = now(),
				update_time = now(),
				order_state = #{orderState}
			where id = #{id}
		]]>
	</update>

	<insert id="save" parameterType="cn.wellcare.entity.order.PayOrder" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
			pay_order
		(
			handle_num,
			handle_name,
			account_id,
			create_time,
			finish_time,
			
			money_order,
			money_paid_balance,
			money_paid_reality,
			order_state,
			order_type,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			payment_status,
			pay_sn,
			pay_time,
			relation_order_sn,
			remark,
			req_ip,
			trade_sn,
			update_time
		)
		values
		(
			#{handleNum},
			#{handleName},
			#{accountId},
			#{createTime},
			#{finishTime},
			
			#{moneyOrder},
			#{moneyPaidBalance},
			#{moneyPaidReality},
			#{orderState},
			#{orderType},
			#{orgId},
			#{outerOrderSn},
			#{paymentCode},
			#{paymentName},
			#{paymentStatus},
			#{paySn},
			#{payTime},
			#{relationOrderSn},
			#{remark},
			#{reqIp},
			#{tradeSn},
			#{updateTime}
		)
	</insert>

	<select id="queryList" resultMap="BaseResultMap"
			parameterType="map">
		select
		<include refid="Base_Column_List" />
		from pay_order
		<include refid="Where_Clause" />
	</select>
	<sql id="Base_Column_List">
		id, pay_sn, outer_order_sn, relation_order_sn, order_type,
		org_id, handle_num,
		handle_name,account_id,
		order_state, pay_time, payment_status,
		money_order, money_paid_balance,
		money_paid_reality,
		req_ip,
		payment_name, payment_code, remark, finish_time, trade_sn,
		create_time, update_time
	</sql>
	<resultMap id="BaseResultMap"
			   type="cn.wellcare.entity.order.PayOrder">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
		<result column="outer_order_sn" jdbcType="VARCHAR" property="outerOrderSn" />
		<result column="relation_order_sn" jdbcType="VARCHAR"
				property="relationOrderSn" />
		<result column="order_type" jdbcType="SMALLINT"
				property="orderType" />
		<result column="org_id" jdbcType="INTEGER" property="orgId" />
		<result column="handle_num" jdbcType="INTEGER"
				property="handleNum" />
		<result column="handle_name" jdbcType="VARCHAR"
				property="handleName" />
		<result column="account_id" jdbcType="INTEGER"
				property="accountId" />
		<result column="order_state" jdbcType="SMALLINT"
				property="orderState" />
		<result column="pay_time" jdbcType="TIMESTAMP"
				property="payTime" />
		<result column="payment_status" jdbcType="SMALLINT"
				property="paymentStatus" />
		<result column="money_order" jdbcType="NUMERIC"
				property="moneyOrder" />
		<result column="money_paid_balance" jdbcType="NUMERIC"
				property="moneyPaidBalance" />
		<result column="money_paid_reality" jdbcType="NUMERIC"
				property="moneyPaidReality" />
		<result column="req_ip" jdbcType="OTHER" property="reqIp" />
		<result column="payment_name" jdbcType="VARCHAR"
				property="paymentName" />
		<result column="payment_code" jdbcType="VARCHAR"
				property="paymentCode" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="finish_time" jdbcType="TIMESTAMP"
				property="finishTime" />
		<result column="trade_sn" jdbcType="VARCHAR" property="tradeSn" />
		<result column="create_time" jdbcType="TIMESTAMP"
				property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
				property="updateTime" />
	</resultMap>

	<sql id="Where_Clause">
		where 1=1
		<trim suffixOverrides=",">
			<if test="paySn != null">
				and pay_sn = #{paySn}
			</if>
			<if test="outerOrderSn != null">
				and outer_order_sn = #{outerOrderSn}
			</if>
			<if test="relationOrderSn != null">
				and relation_order_sn = #{relationOrderSn}
			</if>
			<if test="orderType != null">
				and order_type = #{orderType}
			</if>
			<if test="orgId != null">
				and org_id = #{orgId}
			</if>
			<if test="handleNum != null">
				and handle_num = #{handleNum}
			</if>
			<if test="handleName != null">
				and handle_name = #{handleName}
			</if>
			<if test="accountId != null">
				and account_id = #{accountId}
			</if>
			<if test="orderState != null">
				and order_state = #{orderState}
			</if>
			<if test="payTime != null">
				and pay_time = #{payTime}
			</if>
			<if test="paymentStatus != null">
				and payment_status = #{paymentStatus}
			</if>
			<if test="moneyOrder != null">
				and money_order = #{moneyOrder}
			</if>
			<if test="moneyPaidBalance != null">
				and money_paid_balance =
				#{moneyPaidBalance}
			</if>
			<if test="moneyPaidReality != null">
				and money_paid_reality =
				#{moneyPaidReality}
			</if>
			<if test="reqIp != null">
				and req_ip = #{reqIp}
			</if>
			<if test="paymentName != null">
				and payment_name = #{paymentName}
			</if>
			<if test="paymentCode != null">
				and payment_code = #{paymentCode}
			</if>
			<if test="remark != null">
				and remark = #{remark}
			</if>
			<if test="finishTime != null">
				and finish_time = #{finishTime}
			</if>
			<if test="tradeSn != null">
				and trade_sn = #{tradeSn}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
		</trim>
	</sql>

	<select id="queryOrderBySn" parameterType="string" resultType="cn.wellcare.entity.order.PayOrder">
         select * from pay_order where order_sn = #{orderId}
	</select>

	<select id="page" resultType="cn.wellcare.entity.order.PayOrder">
		select * from pay_order
		<include refid="Where_Clause_page" />
		order by id
		<if test="size != null">limit #{size} offset #{start}</if>
	</select>

	<sql id="Where_Clause_page">
		where 1=1
		<trim suffixOverrides=",">
			<if test="q_paySn != null">
				and pay_sn like CONCAT('%',#{q_paySn},'%')
			</if>
			<if test="q_outerOrderSn != null">
				and outer_order_sn like CONCAT('%',#{q_outerOrderSn},'%')
			</if>
		</trim>
	</sql>

	<update id="updateByOrderSn"
			parameterType="cn.wellcare.entity.order.PayOrder">
		update pay_order
		<set>
			<if test="paySn != null">
				pay_sn = #{paySn},
			</if>
			<if test="outerOrderSn != null">
				outer_order_sn = #{outerOrderSn},
			</if>
			<if test="relationOrderSn != null">
				relation_order_sn = #{relationOrderSn},
			</if>
			<if test="orderType != null">
				order_type = #{orderType},
			</if>
			<if test="orgId != null">
				org_id = #{orgId},
			</if>
			<if test="handleNum != null">
				handle_num = #{handleNum},
			</if>
			<if test="handleName != null">
				handle_name = #{handleName},
			</if>
			<if test="accountId != null">
				account_id = #{accountId},
			</if>
			<if test="orderState != null">
				order_state = #{orderState},
			</if>
			<if test="payTime != null">
				pay_time = #{payTime},
			</if>
			<if test="paymentStatus != null">
				payment_status = #{paymentStatus},
			</if>
			<if test="moneyOrder != null">
				money_order = #{moneyOrder},
			</if>
			<if test="moneyPaidBalance != null">
				money_paid_balance =
				#{moneyPaidBalance},
			</if>
			<if test="moneyPaidReality != null">
				money_paid_reality =
				#{moneyPaidReality},
			</if>
			<if test="reqIp != null">
				req_ip = #{reqIp},
			</if>
			<if test="paymentName != null">
				payment_name = #{paymentName},
			</if>
			<if test="paymentCode != null">
				payment_code = #{paymentCode},
			</if>
			<if test="remark != null">
				remark = #{remark},
			</if>
			<if test="finishTime != null">
				finish_time = #{finishTime},
			</if>
			<if test="tradeSn != null">
				trade_sn = #{tradeSn},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
		where pay_sn = #{paySn,jdbcType=VARCHAR}
	</update>


	<select id="getPayOrderByOrderIdAndStatus" resultType="cn.wellcare.entity.order.PayOrder">
		select
		handle_num,
		handle_name,
		create_time,
		finish_time,
		id,
		money_order,
		money_paid_balance,
		money_paid_reality,
		order_state,
		order_type,
		org_id,
		outer_order_sn,
		payment_code,
		payment_name,
		payment_status,
		pay_sn,
		pay_time,
		relation_order_sn,
		remark,
		req_ip,
		trade_sn,
		update_time
		from pay_order
		<trim suffixOverrides=",">
			<if test="ids != null and ids !='' and ids !='null'"  >
				and id in
				<foreach collection="ids" item="id" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="orderStates != null and orderStates !='' and orderStates !='null'"  >
				and order_state in
				<foreach collection="orderStates" item="status" open="(" close=")" separator=",">
					#{status}
				</foreach>
			</if>
		</trim>
	</select>
</mapper>