<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace和dao对应  -->
<mapper namespace="cn.wellcare.dao.log.PayLogDao">
	<resultMap id="PayLogResult" type="cn.wellcare.entity.log.PayLog">
			<result property="handleNum" column="handle_num" />
			<result property="handleName" column="handle_name" />
			<result property="createTime" column="create_time" />
			<result property="id" column="id" />
			<result property="orderId" column="order_id" />
			<result property="orgId" column="org_id" />
			<result property="outerOrderSn" column="outer_order_sn" />
			<result property="paymentCode" column="payment_code" />
			<result property="paymentName" column="payment_name" />
			<result property="payMoney" column="pay_money" />
			<result property="paySn" column="pay_sn" />
			<result property="tradeSn" column="trade_sn" />
			<result property="updateTime" column="update_time" />
			<result property="opType" column="op_type" />
			<result property="clientTradeTime" column="client_trade_time" />
	</resultMap>
	
	<select id="get" parameterType="Integer" resultMap="PayLogResult">
		select
			handle_num,
			handle_name,
			create_time,
			id,
			order_id,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			pay_money,
			pay_sn,
			trade_sn,
			update_time,
			op_type,
			client_trade_time
		from pay_log
		where id = #{id}
	</select>
	
	<select id="getPayLogByOrderIdAndOpType" resultMap="PayLogResult">
		select
			handle_num,
			handle_name,
			create_time,
			id,
			order_id,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			pay_money,
			pay_sn,
			trade_sn,
			update_time,
			op_type,
			client_trade_time
		from pay_log
		where order_id = #{orderId}  and op_type = #{optype}
	</select>
	
	<select id="getByOrderId" parameterType="Integer" resultMap="PayLogResult">
		select
			handle_num,
			handle_name,
			create_time,
			id,
			order_id,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			pay_money,
			pay_sn,
			trade_sn,
			update_time,
			op_type,
			client_trade_time
		from pay_log
		where order_id = #{orderId}
	</select>
	
	<select id="getCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(1) from pay_log t1
		<include refid="whereConditions" />
	</select>
	
	<select id="getList" resultType="cn.wellcare.entity.log.PayLog">
		select 
			handle_num,
			handle_name,
			create_time,
			id,
			order_id,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			pay_money,
			pay_sn,
			trade_sn,
			update_time,
			op_type,
			client_trade_time
		from pay_log
		<include refid="whereConditions" />
	</select>
	
	<!-- 查询条件 -->
	<sql id="whereConditions">
		where 1=1
		<trim  suffixOverrides="," >
		<if test="handleNum != null and handleNum !=''"  > 
			and handle_num= #{handleNum}
		</if>
		<if test="handleName != null and handleName !=''"  > 
			and handle_name= #{handleName}
		</if>
		<if test="createTime != null and createTime !=''"  > 
			and create_time= #{createTime}
		</if>
		<if test="id != null and id !=''"  > 
			and id= #{id}
		</if>
		<if test="orderId != null and orderId !=''"  > 
			and order_id= #{orderId}
		</if>
		<if test="orgId != null and orgId !=''"  > 
			and org_id= #{orgId}
		</if>
		<if test="outerOrderSn != null and outerOrderSn !=''"  > 
			and outer_order_sn= #{outerOrderSn}
		</if>
		<if test="paymentCode != null and paymentCode !=''"  > 
			and payment_code= #{paymentCode}
		</if>
		<if test="paymentName != null and paymentName !=''"  > 
			and payment_name= #{paymentName}
		</if>
		<if test="payMoney != null and payMoney !=''"  > 
			and pay_money= #{payMoney}
		</if>
		<if test="paySn != null and paySn !=''"  > 
			and pay_sn= #{paySn}
		</if>
		<if test="tradeSn != null and tradeSn !=''"  > 
			and trade_sn= #{tradeSn}
		</if>
		<if test="updateTime != null and updateTime !=''"  > 
			and update_time= #{updateTime}
		</if>
		<if test="opType != null and opType !=''"  >
			and op_type= #{opType}
		</if>
		<if test="q_accountName != null and q_accountName !=''"  >
			and handle_name like CONCAT('%',#{q_accountName},'%')
		</if>
		<if test="clientTradeTime != null and clientTradeTime !=''"  >
			and client_trade_time = #{clientTradeTime}
		</if>
		</trim>
	</sql>
	
	<delete id="del">
        delete from pay_log where id = #{id}
	</delete>
	
	<update id="update" parameterType="cn.wellcare.entity.log.PayLog">
        update pay_log
    	<set>
			<if test="handleNum != null">handle_num= #{handleNum},</if>
			<if test="handleName != null">handle_name= #{handleName},</if>
			<if test="createTime != null">create_time= #{createTime},</if>
			<if test="id != null">id= #{id},</if>
			<if test="orderId != null">order_id= #{orderId},</if>
			<if test="orgId != null">org_id= #{orgId},</if>
			<if test="outerOrderSn != null">outer_order_sn= #{outerOrderSn},</if>
			<if test="paymentCode != null">payment_code= #{paymentCode},</if>
			<if test="paymentName != null">payment_name= #{paymentName},</if>
			<if test="payMoney != null">pay_money= #{payMoney},</if>
			<if test="paySn != null">pay_sn= #{paySn},</if>
			<if test="tradeSn != null">trade_sn= #{tradeSn},</if>
			<if test="updateTime != null">update_time= #{updateTime},</if>
			<if test="opType != null " >op_type= #{opType},</if>
			<if test="clientTradeTime != null " >client_trade_time= #{clientTradeTime}</if>
	    </set>
        where id = #{id}
	</update>
	
	<insert id="save" parameterType="cn.wellcare.entity.log.PayLog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
			pay_log
		(
			handle_num,
			handle_name,
			create_time,
			
			order_id,
			org_id,
			outer_order_sn,
			payment_code,
			payment_name,
			pay_money,
			pay_sn,
			trade_sn,
			update_time,
			op_type,
			client_trade_time
		)
		values
		(
			#{handleNum},
			#{handleName},
			#{createTime},
			
			#{orderId},
			#{orgId},
			#{outerOrderSn},
			#{paymentCode},
			#{paymentName},
			#{payMoney},
			#{paySn},
			#{tradeSn},
			#{updateTime},
			#{opType},
			#{clientTradeTime}
		)
	</insert>
	
</mapper>