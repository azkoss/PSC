<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace和dao对应  -->
<mapper namespace="cn.wellcare.dao.refund.PayRefundDao">
	<resultMap id="PayRefundResult" type="cn.wellcare.entity.refund.PayRefund">
			<result property="createTime" column="create_time" />
			<result property="id" column="id" />
			<result property="ispartial" column="ispartial" />
			<result property="orderId" column="order_id" />
			<result property="refundAmount" column="refund_amount" />
			<result property="status" column="status" />
			<result property="tradeSn" column="trade_sn" />
			<result property="updateTime" column="update_time" />
			<result property="applyNo" column="apply_no" />
	</resultMap>
	
	<select id="get" parameterType="Integer" resultMap="PayRefundResult">
		select
			create_time,
			id,
			ispartial,
			order_id,
			refund_amount,
			status,
			trade_sn,
			apply_no,
			update_time
		from pay_refund
		where id = #{id}
	</select>
	<select id="queryPayRefund" parameterType="Integer" resultMap="PayRefundResult">
		select
			create_time,
			id,
			ispartial,
			order_id,
			refund_amount,
			status,
			trade_sn,
			apply_no,
			update_time
		from pay_refund
		where order_id = #{orderId}
	</select>

	<select id="getCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(1) from pay_refund t1
		<include refid="whereConditions" />
	</select>
	
	<select id="getList" resultType="cn.wellcare.entity.refund.PayRefund">
		select 
			create_time,
			id,
			ispartial,
			order_id,
			refund_amount,
			status,
			trade_sn,
			apply_no,
			update_time
		from pay_refund
		<include refid="whereConditions" />
	</select>
	
	<!-- 查询条件 -->
	<sql id="whereConditions">
		where 1=1
		<trim  suffixOverrides="," >
		<if test="createTime != null and createTime !=''"  > 
			and create_time= #{createTime}
		</if>
		<if test="id != null and id !=''"  > 
			and id= #{id}
		</if>
		<if test="ispartial != null and ispartial !=''"  > 
			and ispartial= #{ispartial}
		</if>
		<if test="orderId != null and orderId !=''"  > 
			and order_id= #{orderId}
		</if>
		<if test="refundAmount != null and refundAmount !=''"  > 
			and refund_amount= #{refundAmount}
		</if>
		<if test="status != null and status !=''"  > 
			and status= #{status}
		</if>
		<if test="tradeSn != null and tradeSn !=''"  > 
			and trade_sn= #{tradeSn}
		</if>
	  	<if test="applyNo != null and applyNo !=''"  >
				and apply_no= #{applyNo}
	  	</if>
		<if test="updateTime != null and updateTime !=''"  >
			and update_time= #{updateTime}
		</if>
		</trim>
	</sql>
	
	<delete id="del">
        delete from pay_refund where id = #{id}
	</delete>
	
	<update id="update" parameterType="cn.wellcare.entity.refund.PayRefund">
        update pay_refund
    	<set>
			<if test="createTime != null">create_time= #{createTime},</if>
			<if test="id != null">id= #{id},</if>
			<if test="ispartial != null">ispartial= #{ispartial},</if>
			<if test="orderId != null">order_id= #{orderId},</if>
			<if test="refundAmount != null">refund_amount= #{refundAmount},</if>
			<if test="status != null">status= #{status},</if>
			<if test="tradeSn != null">trade_sn= #{tradeSn},</if>
			<if test="applyNo != null">apply_no= #{applyNo},</if>
			<if test="updateTime != null">update_time= #{updateTime}</if>
	    </set>
        where id = #{id}
	</update>
	
	<insert id="save" parameterType="cn.wellcare.entity.refund.PayRefund" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
			pay_refund
		(
			create_time,
			
			ispartial,
			order_id,
			refund_amount,
			status,
			trade_sn,
			apply_no,
			update_time
		)
		values
		(
			#{createTime},
			
			#{ispartial},
			#{orderId},
			#{refundAmount},
			#{status},
			#{tradeSn},
			#{applyNo},
			#{updateTime}
		)
	</insert>
	
</mapper>